/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { clusterClusterAddManager } from "../funcs/clusterClusterAddManager.js";
import { clusterClusterAddWorker } from "../funcs/clusterClusterAddWorker.js";
import { clusterClusterGetNodes } from "../funcs/clusterClusterGetNodes.js";
import { clusterClusterRemoveWorker } from "../funcs/clusterClusterRemoveWorker.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Cluster extends ClientSDK {
  async clusterGetNodes(
    security: operations.ClusterGetNodesSecurity,
    request?: operations.ClusterGetNodesRequest | undefined,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(clusterClusterGetNodes(
      this,
      security,
      request,
      options,
    ));
  }

  async clusterRemoveWorker(
    security: operations.ClusterRemoveWorkerSecurity,
    request: operations.ClusterRemoveWorkerRequest,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(clusterClusterRemoveWorker(
      this,
      security,
      request,
      options,
    ));
  }

  async clusterAddWorker(
    security: operations.ClusterAddWorkerSecurity,
    request?: operations.ClusterAddWorkerRequest | undefined,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(clusterClusterAddWorker(
      this,
      security,
      request,
      options,
    ));
  }

  async clusterAddManager(
    security: operations.ClusterAddManagerSecurity,
    request?: operations.ClusterAddManagerRequest | undefined,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(clusterClusterAddManager(
      this,
      security,
      request,
      options,
    ));
  }
}
