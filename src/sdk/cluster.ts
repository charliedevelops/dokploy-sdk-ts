/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { clusterAddManager } from "../funcs/clusterAddManager.js";
import { clusterAddWorker } from "../funcs/clusterAddWorker.js";
import { clusterGetNodes } from "../funcs/clusterGetNodes.js";
import { clusterRemoveWorker } from "../funcs/clusterRemoveWorker.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Cluster extends ClientSDK {
  async addManager(
    request?: operations.ClusterAddManagerRequest | undefined,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(clusterAddManager(
      this,
      request,
      options,
    ));
  }

  async addWorker(
    request?: operations.ClusterAddWorkerRequest | undefined,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(clusterAddWorker(
      this,
      request,
      options,
    ));
  }

  async getNodes(
    request?: operations.ClusterGetNodesRequest | undefined,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(clusterGetNodes(
      this,
      request,
      options,
    ));
  }

  async removeWorker(
    request: operations.ClusterRemoveWorkerRequest,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(clusterRemoveWorker(
      this,
      request,
      options,
    ));
  }
}
