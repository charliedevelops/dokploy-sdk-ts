/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { registryCreate } from "../funcs/registryCreate.js";
import { registryGetAll } from "../funcs/registryGetAll.js";
import { registryOne } from "../funcs/registryOne.js";
import { registryRemove } from "../funcs/registryRemove.js";
import { registryTestRegistry } from "../funcs/registryTestRegistry.js";
import { registryUpdate } from "../funcs/registryUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Registry extends ClientSDK {
  async getAll(
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(registryGetAll(
      this,
      options,
    ));
  }

  async create(
    request: operations.RegistryCreateRequest,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(registryCreate(
      this,
      request,
      options,
    ));
  }

  async one(
    request: operations.RegistryOneRequest,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(registryOne(
      this,
      request,
      options,
    ));
  }

  async remove(
    request: operations.RegistryRemoveRequest,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(registryRemove(
      this,
      request,
      options,
    ));
  }

  async testRegistry(
    request: operations.RegistryTestRegistryRequest,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(registryTestRegistry(
      this,
      request,
      options,
    ));
  }

  async update(
    request: operations.RegistryUpdateRequest,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(registryUpdate(
      this,
      request,
      options,
    ));
  }
}
