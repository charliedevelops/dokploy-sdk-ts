/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { mysqlChangeStatus } from "../funcs/mysqlChangeStatus.js";
import { mysqlCreate } from "../funcs/mysqlCreate.js";
import { mysqlDeploy } from "../funcs/mysqlDeploy.js";
import { mysqlGet } from "../funcs/mysqlGet.js";
import { mysqlMove } from "../funcs/mysqlMove.js";
import { mysqlRebuild } from "../funcs/mysqlRebuild.js";
import { mysqlReload } from "../funcs/mysqlReload.js";
import { mysqlRemove } from "../funcs/mysqlRemove.js";
import { mysqlSaveEnvironment } from "../funcs/mysqlSaveEnvironment.js";
import { mysqlSaveExternalPort } from "../funcs/mysqlSaveExternalPort.js";
import { mysqlStart } from "../funcs/mysqlStart.js";
import { mysqlStop } from "../funcs/mysqlStop.js";
import { mysqlUpdate } from "../funcs/mysqlUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Mysql extends ClientSDK {
  async changeStatus(
    request: operations.MysqlChangeStatusRequest,
    options?: RequestOptions,
  ): Promise<operations.MysqlChangeStatusResponse> {
    return unwrapAsync(mysqlChangeStatus(
      this,
      request,
      options,
    ));
  }

  async create(
    request: operations.MysqlCreateRequest,
    options?: RequestOptions,
  ): Promise<operations.MysqlCreateResponse> {
    return unwrapAsync(mysqlCreate(
      this,
      request,
      options,
    ));
  }

  async deploy(
    request: operations.MysqlDeployRequest,
    options?: RequestOptions,
  ): Promise<operations.MysqlDeployResponse> {
    return unwrapAsync(mysqlDeploy(
      this,
      request,
      options,
    ));
  }

  async move(
    request: operations.MysqlMoveRequest,
    options?: RequestOptions,
  ): Promise<operations.MysqlMoveResponse> {
    return unwrapAsync(mysqlMove(
      this,
      request,
      options,
    ));
  }

  async get(
    request: operations.MysqlOneRequest,
    options?: RequestOptions,
  ): Promise<operations.MysqlOneResponse> {
    return unwrapAsync(mysqlGet(
      this,
      request,
      options,
    ));
  }

  async rebuild(
    request: operations.MysqlRebuildRequest,
    options?: RequestOptions,
  ): Promise<operations.MysqlRebuildResponse> {
    return unwrapAsync(mysqlRebuild(
      this,
      request,
      options,
    ));
  }

  async reload(
    request: operations.MysqlReloadRequest,
    options?: RequestOptions,
  ): Promise<operations.MysqlReloadResponse> {
    return unwrapAsync(mysqlReload(
      this,
      request,
      options,
    ));
  }

  async remove(
    request: operations.MysqlRemoveRequest,
    options?: RequestOptions,
  ): Promise<operations.MysqlRemoveResponse> {
    return unwrapAsync(mysqlRemove(
      this,
      request,
      options,
    ));
  }

  async saveEnvironment(
    request: operations.MysqlSaveEnvironmentRequest,
    options?: RequestOptions,
  ): Promise<operations.MysqlSaveEnvironmentResponse> {
    return unwrapAsync(mysqlSaveEnvironment(
      this,
      request,
      options,
    ));
  }

  async saveExternalPort(
    request: operations.MysqlSaveExternalPortRequest,
    options?: RequestOptions,
  ): Promise<operations.MysqlSaveExternalPortResponse> {
    return unwrapAsync(mysqlSaveExternalPort(
      this,
      request,
      options,
    ));
  }

  async start(
    request: operations.MysqlStartRequest,
    options?: RequestOptions,
  ): Promise<operations.MysqlStartResponse> {
    return unwrapAsync(mysqlStart(
      this,
      request,
      options,
    ));
  }

  async stop(
    request: operations.MysqlStopRequest,
    options?: RequestOptions,
  ): Promise<operations.MysqlStopResponse> {
    return unwrapAsync(mysqlStop(
      this,
      request,
      options,
    ));
  }

  async update(
    request: operations.MysqlUpdateRequest,
    options?: RequestOptions,
  ): Promise<operations.MysqlUpdateResponse> {
    return unwrapAsync(mysqlUpdate(
      this,
      request,
      options,
    ));
  }
}
