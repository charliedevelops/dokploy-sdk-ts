/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { certificatesCertificatesAll } from "../funcs/certificatesCertificatesAll.js";
import { certificatesCertificatesCreate } from "../funcs/certificatesCertificatesCreate.js";
import { certificatesCertificatesOne } from "../funcs/certificatesCertificatesOne.js";
import { certificatesCertificatesRemove } from "../funcs/certificatesCertificatesRemove.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Certificates extends ClientSDK {
  async certificatesCreate(
    security: operations.CertificatesCreateSecurity,
    request: operations.CertificatesCreateRequest,
    options?: RequestOptions,
  ): Promise<operations.CertificatesCreateResponse> {
    return unwrapAsync(certificatesCertificatesCreate(
      this,
      security,
      request,
      options,
    ));
  }

  async certificatesOne(
    security: operations.CertificatesOneSecurity,
    request: operations.CertificatesOneRequest,
    options?: RequestOptions,
  ): Promise<operations.CertificatesOneResponse> {
    return unwrapAsync(certificatesCertificatesOne(
      this,
      security,
      request,
      options,
    ));
  }

  async certificatesRemove(
    security: operations.CertificatesRemoveSecurity,
    request: operations.CertificatesRemoveRequest,
    options?: RequestOptions,
  ): Promise<operations.CertificatesRemoveResponse> {
    return unwrapAsync(certificatesCertificatesRemove(
      this,
      security,
      request,
      options,
    ));
  }

  async certificatesAll(
    security: operations.CertificatesAllSecurity,
    options?: RequestOptions,
  ): Promise<operations.CertificatesAllResponse> {
    return unwrapAsync(certificatesCertificatesAll(
      this,
      security,
      options,
    ));
  }
}
