/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { scheduleCreate } from "../funcs/scheduleCreate.js";
import { scheduleDelete } from "../funcs/scheduleDelete.js";
import { scheduleGet } from "../funcs/scheduleGet.js";
import { scheduleList } from "../funcs/scheduleList.js";
import { scheduleRunManually } from "../funcs/scheduleRunManually.js";
import { scheduleUpdate } from "../funcs/scheduleUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Schedule extends ClientSDK {
  async create(
    request: operations.ScheduleCreateRequest,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(scheduleCreate(
      this,
      request,
      options,
    ));
  }

  async delete(
    request: operations.ScheduleDeleteRequest,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(scheduleDelete(
      this,
      request,
      options,
    ));
  }

  async list(
    request: operations.ScheduleListRequest,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(scheduleList(
      this,
      request,
      options,
    ));
  }

  async get(
    request: operations.ScheduleOneRequest,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(scheduleGet(
      this,
      request,
      options,
    ));
  }

  async runManually(
    request: operations.ScheduleRunManuallyRequest,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(scheduleRunManually(
      this,
      request,
      options,
    ));
  }

  async update(
    request: operations.ScheduleUpdateRequest,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(scheduleUpdate(
      this,
      request,
      options,
    ));
  }
}
