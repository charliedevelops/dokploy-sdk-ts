/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { backupBackupCreate } from "../funcs/backupBackupCreate.js";
import { backupBackupListBackupFiles } from "../funcs/backupBackupListBackupFiles.js";
import { backupBackupManualBackupCompose } from "../funcs/backupBackupManualBackupCompose.js";
import { backupBackupManualBackupMariadb } from "../funcs/backupBackupManualBackupMariadb.js";
import { backupBackupManualBackupMongo } from "../funcs/backupBackupManualBackupMongo.js";
import { backupBackupManualBackupMySql } from "../funcs/backupBackupManualBackupMySql.js";
import { backupBackupManualBackupPostgres } from "../funcs/backupBackupManualBackupPostgres.js";
import { backupBackupManualBackupWebServer } from "../funcs/backupBackupManualBackupWebServer.js";
import { backupBackupOne } from "../funcs/backupBackupOne.js";
import { backupBackupRemove } from "../funcs/backupBackupRemove.js";
import { backupBackupUpdate } from "../funcs/backupBackupUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Backup extends ClientSDK {
  async backupCreate(
    security: operations.BackupCreateSecurity,
    request: operations.BackupCreateRequest,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(backupBackupCreate(
      this,
      security,
      request,
      options,
    ));
  }

  async backupListBackupFiles(
    security: operations.BackupListBackupFilesSecurity,
    request: operations.BackupListBackupFilesRequest,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(backupBackupListBackupFiles(
      this,
      security,
      request,
      options,
    ));
  }

  async backupManualBackupCompose(
    security: operations.BackupManualBackupComposeSecurity,
    request: operations.BackupManualBackupComposeRequest,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(backupBackupManualBackupCompose(
      this,
      security,
      request,
      options,
    ));
  }

  async backupManualBackupMariadb(
    security: operations.BackupManualBackupMariadbSecurity,
    request: operations.BackupManualBackupMariadbRequest,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(backupBackupManualBackupMariadb(
      this,
      security,
      request,
      options,
    ));
  }

  async backupManualBackupMongo(
    security: operations.BackupManualBackupMongoSecurity,
    request: operations.BackupManualBackupMongoRequest,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(backupBackupManualBackupMongo(
      this,
      security,
      request,
      options,
    ));
  }

  async backupManualBackupMySql(
    security: operations.BackupManualBackupMySqlSecurity,
    request: operations.BackupManualBackupMySqlRequest,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(backupBackupManualBackupMySql(
      this,
      security,
      request,
      options,
    ));
  }

  async backupManualBackupPostgres(
    security: operations.BackupManualBackupPostgresSecurity,
    request: operations.BackupManualBackupPostgresRequest,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(backupBackupManualBackupPostgres(
      this,
      security,
      request,
      options,
    ));
  }

  async backupManualBackupWebServer(
    security: operations.BackupManualBackupWebServerSecurity,
    request: operations.BackupManualBackupWebServerRequest,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(backupBackupManualBackupWebServer(
      this,
      security,
      request,
      options,
    ));
  }

  async backupOne(
    security: operations.BackupOneSecurity,
    request: operations.BackupOneRequest,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(backupBackupOne(
      this,
      security,
      request,
      options,
    ));
  }

  async backupRemove(
    security: operations.BackupRemoveSecurity,
    request: operations.BackupRemoveRequest,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(backupBackupRemove(
      this,
      security,
      request,
      options,
    ));
  }

  async backupUpdate(
    security: operations.BackupUpdateSecurity,
    request: operations.BackupUpdateRequest,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(backupBackupUpdate(
      this,
      security,
      request,
      options,
    ));
  }
}
