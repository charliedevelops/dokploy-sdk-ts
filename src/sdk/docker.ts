/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { dockerDockerGetConfig } from "../funcs/dockerDockerGetConfig.js";
import { dockerDockerGetContainers } from "../funcs/dockerDockerGetContainers.js";
import { dockerDockerGetContainersByAppLabel } from "../funcs/dockerDockerGetContainersByAppLabel.js";
import { dockerDockerGetContainersByAppNameMatch } from "../funcs/dockerDockerGetContainersByAppNameMatch.js";
import { dockerDockerGetServiceContainersByAppName } from "../funcs/dockerDockerGetServiceContainersByAppName.js";
import { dockerDockerGetStackContainersByAppName } from "../funcs/dockerDockerGetStackContainersByAppName.js";
import { dockerDockerRestartContainer } from "../funcs/dockerDockerRestartContainer.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Docker extends ClientSDK {
  async dockerGetConfig(
    security: operations.DockerGetConfigSecurity,
    request: operations.DockerGetConfigRequest,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(dockerDockerGetConfig(
      this,
      security,
      request,
      options,
    ));
  }

  async dockerGetContainers(
    security: operations.DockerGetContainersSecurity,
    request?: operations.DockerGetContainersRequest | undefined,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(dockerDockerGetContainers(
      this,
      security,
      request,
      options,
    ));
  }

  async dockerGetContainersByAppLabel(
    security: operations.DockerGetContainersByAppLabelSecurity,
    request: operations.DockerGetContainersByAppLabelRequest,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(dockerDockerGetContainersByAppLabel(
      this,
      security,
      request,
      options,
    ));
  }

  async dockerGetContainersByAppNameMatch(
    security: operations.DockerGetContainersByAppNameMatchSecurity,
    request: operations.DockerGetContainersByAppNameMatchRequest,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(dockerDockerGetContainersByAppNameMatch(
      this,
      security,
      request,
      options,
    ));
  }

  async dockerGetServiceContainersByAppName(
    security: operations.DockerGetServiceContainersByAppNameSecurity,
    request: operations.DockerGetServiceContainersByAppNameRequest,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(dockerDockerGetServiceContainersByAppName(
      this,
      security,
      request,
      options,
    ));
  }

  async dockerGetStackContainersByAppName(
    security: operations.DockerGetStackContainersByAppNameSecurity,
    request: operations.DockerGetStackContainersByAppNameRequest,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(dockerDockerGetStackContainersByAppName(
      this,
      security,
      request,
      options,
    ));
  }

  async dockerRestartContainer(
    security: operations.DockerRestartContainerSecurity,
    request: operations.DockerRestartContainerRequest,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(dockerDockerRestartContainer(
      this,
      security,
      request,
      options,
    ));
  }
}
