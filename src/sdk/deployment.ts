/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { deploymentAll } from "../funcs/deploymentAll.js";
import { deploymentAllByServer } from "../funcs/deploymentAllByServer.js";
import { deploymentGetAllByCompose } from "../funcs/deploymentGetAllByCompose.js";
import { deploymentGetAllByType } from "../funcs/deploymentGetAllByType.js";
import { deploymentKillProcess } from "../funcs/deploymentKillProcess.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Deployment extends ClientSDK {
  async all(
    request: operations.DeploymentAllRequest,
    options?: RequestOptions,
  ): Promise<operations.DeploymentAllResponse> {
    return unwrapAsync(deploymentAll(
      this,
      request,
      options,
    ));
  }

  async getAllByCompose(
    request: operations.DeploymentAllByComposeRequest,
    options?: RequestOptions,
  ): Promise<operations.DeploymentAllByComposeResponse> {
    return unwrapAsync(deploymentGetAllByCompose(
      this,
      request,
      options,
    ));
  }

  async allByServer(
    request: operations.DeploymentAllByServerRequest,
    options?: RequestOptions,
  ): Promise<operations.DeploymentAllByServerResponse> {
    return unwrapAsync(deploymentAllByServer(
      this,
      request,
      options,
    ));
  }

  async getAllByType(
    request: operations.DeploymentAllByTypeRequest,
    options?: RequestOptions,
  ): Promise<operations.DeploymentAllByTypeResponse> {
    return unwrapAsync(deploymentGetAllByType(
      this,
      request,
      options,
    ));
  }

  async killProcess(
    request: operations.DeploymentKillProcessRequest,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(deploymentKillProcess(
      this,
      request,
      options,
    ));
  }
}
