/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { mariadbChangeStatus } from "../funcs/mariadbChangeStatus.js";
import { mariadbCreate } from "../funcs/mariadbCreate.js";
import { mariadbDeploy } from "../funcs/mariadbDeploy.js";
import { mariadbGet } from "../funcs/mariadbGet.js";
import { mariadbMove } from "../funcs/mariadbMove.js";
import { mariadbRebuild } from "../funcs/mariadbRebuild.js";
import { mariadbReload } from "../funcs/mariadbReload.js";
import { mariadbRemove } from "../funcs/mariadbRemove.js";
import { mariadbSaveEnvironment } from "../funcs/mariadbSaveEnvironment.js";
import { mariadbSaveExternalPort } from "../funcs/mariadbSaveExternalPort.js";
import { mariadbStart } from "../funcs/mariadbStart.js";
import { mariadbStop } from "../funcs/mariadbStop.js";
import { mariadbUpdate } from "../funcs/mariadbUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Mariadb extends ClientSDK {
  async changeStatus(
    request: operations.MariadbChangeStatusRequest,
    options?: RequestOptions,
  ): Promise<operations.MariadbChangeStatusResponse> {
    return unwrapAsync(mariadbChangeStatus(
      this,
      request,
      options,
    ));
  }

  async create(
    request: operations.MariadbCreateRequest,
    options?: RequestOptions,
  ): Promise<operations.MariadbCreateResponse> {
    return unwrapAsync(mariadbCreate(
      this,
      request,
      options,
    ));
  }

  async deploy(
    request: operations.MariadbDeployRequest,
    options?: RequestOptions,
  ): Promise<operations.MariadbDeployResponse> {
    return unwrapAsync(mariadbDeploy(
      this,
      request,
      options,
    ));
  }

  async move(
    request: operations.MariadbMoveRequest,
    options?: RequestOptions,
  ): Promise<operations.MariadbMoveResponse> {
    return unwrapAsync(mariadbMove(
      this,
      request,
      options,
    ));
  }

  async get(
    request: operations.MariadbOneRequest,
    options?: RequestOptions,
  ): Promise<operations.MariadbOneResponse> {
    return unwrapAsync(mariadbGet(
      this,
      request,
      options,
    ));
  }

  async rebuild(
    request: operations.MariadbRebuildRequest,
    options?: RequestOptions,
  ): Promise<operations.MariadbRebuildResponse> {
    return unwrapAsync(mariadbRebuild(
      this,
      request,
      options,
    ));
  }

  async reload(
    request: operations.MariadbReloadRequest,
    options?: RequestOptions,
  ): Promise<operations.MariadbReloadResponse> {
    return unwrapAsync(mariadbReload(
      this,
      request,
      options,
    ));
  }

  async remove(
    request: operations.MariadbRemoveRequest,
    options?: RequestOptions,
  ): Promise<operations.MariadbRemoveResponse> {
    return unwrapAsync(mariadbRemove(
      this,
      request,
      options,
    ));
  }

  async saveEnvironment(
    request: operations.MariadbSaveEnvironmentRequest,
    options?: RequestOptions,
  ): Promise<operations.MariadbSaveEnvironmentResponse> {
    return unwrapAsync(mariadbSaveEnvironment(
      this,
      request,
      options,
    ));
  }

  async saveExternalPort(
    request: operations.MariadbSaveExternalPortRequest,
    options?: RequestOptions,
  ): Promise<operations.MariadbSaveExternalPortResponse> {
    return unwrapAsync(mariadbSaveExternalPort(
      this,
      request,
      options,
    ));
  }

  async start(
    request: operations.MariadbStartRequest,
    options?: RequestOptions,
  ): Promise<operations.MariadbStartResponse> {
    return unwrapAsync(mariadbStart(
      this,
      request,
      options,
    ));
  }

  async stop(
    request: operations.MariadbStopRequest,
    options?: RequestOptions,
  ): Promise<operations.MariadbStopResponse> {
    return unwrapAsync(mariadbStop(
      this,
      request,
      options,
    ));
  }

  async update(
    request: operations.MariadbUpdateRequest,
    options?: RequestOptions,
  ): Promise<operations.MariadbUpdateResponse> {
    return unwrapAsync(mariadbUpdate(
      this,
      request,
      options,
    ));
  }
}
