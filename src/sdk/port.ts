/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { portPortCreate } from "../funcs/portPortCreate.js";
import { portPortDelete } from "../funcs/portPortDelete.js";
import { portPortOne } from "../funcs/portPortOne.js";
import { portPortUpdate } from "../funcs/portPortUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Port extends ClientSDK {
  async portCreate(
    security: operations.PortCreateSecurity,
    request: operations.PortCreateRequest,
    options?: RequestOptions,
  ): Promise<operations.PortCreateResponse> {
    return unwrapAsync(portPortCreate(
      this,
      security,
      request,
      options,
    ));
  }

  async portDelete(
    security: operations.PortDeleteSecurity,
    request: operations.PortDeleteRequest,
    options?: RequestOptions,
  ): Promise<operations.PortDeleteResponse> {
    return unwrapAsync(portPortDelete(
      this,
      security,
      request,
      options,
    ));
  }

  async portOne(
    security: operations.PortOneSecurity,
    request: operations.PortOneRequest,
    options?: RequestOptions,
  ): Promise<operations.PortOneResponse> {
    return unwrapAsync(portPortOne(
      this,
      security,
      request,
      options,
    ));
  }

  async portUpdate(
    security: operations.PortUpdateSecurity,
    request: operations.PortUpdateRequest,
    options?: RequestOptions,
  ): Promise<operations.PortUpdateResponse> {
    return unwrapAsync(portPortUpdate(
      this,
      security,
      request,
      options,
    ));
  }
}
