/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { mountsAllNamedByApplicationId } from "../funcs/mountsAllNamedByApplicationId.js";
import { mountsCreate } from "../funcs/mountsCreate.js";
import { mountsGet } from "../funcs/mountsGet.js";
import { mountsRemove } from "../funcs/mountsRemove.js";
import { mountsUpdate } from "../funcs/mountsUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Mounts extends ClientSDK {
  async allNamedByApplicationId(
    request: operations.MountsAllNamedByApplicationIdRequest,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(mountsAllNamedByApplicationId(
      this,
      request,
      options,
    ));
  }

  async create(
    request: operations.MountsCreateRequest,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(mountsCreate(
      this,
      request,
      options,
    ));
  }

  async get(
    request: operations.MountsOneRequest,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(mountsGet(
      this,
      request,
      options,
    ));
  }

  async remove(
    request: operations.MountsRemoveRequest,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(mountsRemove(
      this,
      request,
      options,
    ));
  }

  async update(
    request: operations.MountsUpdateRequest,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(mountsUpdate(
      this,
      request,
      options,
    ));
  }
}
