/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { swarmSwarmGetNodeApps } from "../funcs/swarmSwarmGetNodeApps.js";
import { swarmSwarmGetNodeInfo } from "../funcs/swarmSwarmGetNodeInfo.js";
import { swarmSwarmGetNodes } from "../funcs/swarmSwarmGetNodes.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Swarm extends ClientSDK {
  async swarmGetNodeApps(
    security: operations.SwarmGetNodeAppsSecurity,
    request?: operations.SwarmGetNodeAppsRequest | undefined,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(swarmSwarmGetNodeApps(
      this,
      security,
      request,
      options,
    ));
  }

  async swarmGetNodeInfo(
    security: operations.SwarmGetNodeInfoSecurity,
    request: operations.SwarmGetNodeInfoRequest,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(swarmSwarmGetNodeInfo(
      this,
      security,
      request,
      options,
    ));
  }

  async swarmGetNodes(
    security: operations.SwarmGetNodesSecurity,
    request?: operations.SwarmGetNodesRequest | undefined,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(swarmSwarmGetNodes(
      this,
      security,
      request,
      options,
    ));
  }
}
