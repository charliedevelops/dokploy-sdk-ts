/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { stripeStripeCanCreateMoreServers } from "../funcs/stripeStripeCanCreateMoreServers.js";
import { stripeStripeCreateCheckoutSession } from "../funcs/stripeStripeCreateCheckoutSession.js";
import { stripeStripeCreateCustomerPortalSession } from "../funcs/stripeStripeCreateCustomerPortalSession.js";
import { stripeStripeGetProducts } from "../funcs/stripeStripeGetProducts.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Stripe extends ClientSDK {
  async stripeGetProducts(
    security: operations.StripeGetProductsSecurity,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(stripeStripeGetProducts(
      this,
      security,
      options,
    ));
  }

  async stripeCreateCheckoutSession(
    security: operations.StripeCreateCheckoutSessionSecurity,
    request: operations.StripeCreateCheckoutSessionRequest,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(stripeStripeCreateCheckoutSession(
      this,
      security,
      request,
      options,
    ));
  }

  async stripeCreateCustomerPortalSession(
    security: operations.StripeCreateCustomerPortalSessionSecurity,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(stripeStripeCreateCustomerPortalSession(
      this,
      security,
      options,
    ));
  }

  async stripeCanCreateMoreServers(
    security: operations.StripeCanCreateMoreServersSecurity,
    options?: RequestOptions,
  ): Promise<models.ErrorT | undefined> {
    return unwrapAsync(stripeStripeCanCreateMoreServers(
      this,
      security,
      options,
    ));
  }
}
