/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { previewDeploymentDelete } from "../funcs/previewDeploymentDelete.js";
import { previewDeploymentGet } from "../funcs/previewDeploymentGet.js";
import { previewDeploymentGetAll } from "../funcs/previewDeploymentGetAll.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class PreviewDeployment extends ClientSDK {
  async getAll(
    request: operations.PreviewDeploymentAllRequest,
    options?: RequestOptions,
  ): Promise<operations.PreviewDeploymentAllResponse> {
    return unwrapAsync(previewDeploymentGetAll(
      this,
      request,
      options,
    ));
  }

  async delete(
    request: operations.PreviewDeploymentDeleteRequest,
    options?: RequestOptions,
  ): Promise<operations.PreviewDeploymentDeleteResponse> {
    return unwrapAsync(previewDeploymentDelete(
      this,
      request,
      options,
    ));
  }

  async get(
    request: operations.PreviewDeploymentOneRequest,
    options?: RequestOptions,
  ): Promise<operations.PreviewDeploymentOneResponse> {
    return unwrapAsync(previewDeploymentGet(
      this,
      request,
      options,
    ));
  }
}
