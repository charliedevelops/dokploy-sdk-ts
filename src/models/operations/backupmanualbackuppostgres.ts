/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type BackupManualBackupPostgresRequest = {
  backupId: string;
};

/** @internal */
export const BackupManualBackupPostgresRequest$inboundSchema: z.ZodType<
  BackupManualBackupPostgresRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  backupId: z.string(),
});

/** @internal */
export type BackupManualBackupPostgresRequest$Outbound = {
  backupId: string;
};

/** @internal */
export const BackupManualBackupPostgresRequest$outboundSchema: z.ZodType<
  BackupManualBackupPostgresRequest$Outbound,
  z.ZodTypeDef,
  BackupManualBackupPostgresRequest
> = z.object({
  backupId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BackupManualBackupPostgresRequest$ {
  /** @deprecated use `BackupManualBackupPostgresRequest$inboundSchema` instead. */
  export const inboundSchema = BackupManualBackupPostgresRequest$inboundSchema;
  /** @deprecated use `BackupManualBackupPostgresRequest$outboundSchema` instead. */
  export const outboundSchema =
    BackupManualBackupPostgresRequest$outboundSchema;
  /** @deprecated use `BackupManualBackupPostgresRequest$Outbound` instead. */
  export type Outbound = BackupManualBackupPostgresRequest$Outbound;
}

export function backupManualBackupPostgresRequestToJSON(
  backupManualBackupPostgresRequest: BackupManualBackupPostgresRequest,
): string {
  return JSON.stringify(
    BackupManualBackupPostgresRequest$outboundSchema.parse(
      backupManualBackupPostgresRequest,
    ),
  );
}

export function backupManualBackupPostgresRequestFromJSON(
  jsonString: string,
): SafeParseResult<BackupManualBackupPostgresRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => BackupManualBackupPostgresRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'BackupManualBackupPostgresRequest' from JSON`,
  );
}
