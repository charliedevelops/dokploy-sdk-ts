/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type StripeCreateCheckoutSessionRequest = {
  isAnnual: boolean;
  productId: string;
  serverQuantity: number;
};

/** @internal */
export const StripeCreateCheckoutSessionRequest$inboundSchema: z.ZodType<
  StripeCreateCheckoutSessionRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  isAnnual: z.boolean(),
  productId: z.string(),
  serverQuantity: z.number(),
});

/** @internal */
export type StripeCreateCheckoutSessionRequest$Outbound = {
  isAnnual: boolean;
  productId: string;
  serverQuantity: number;
};

/** @internal */
export const StripeCreateCheckoutSessionRequest$outboundSchema: z.ZodType<
  StripeCreateCheckoutSessionRequest$Outbound,
  z.ZodTypeDef,
  StripeCreateCheckoutSessionRequest
> = z.object({
  isAnnual: z.boolean(),
  productId: z.string(),
  serverQuantity: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace StripeCreateCheckoutSessionRequest$ {
  /** @deprecated use `StripeCreateCheckoutSessionRequest$inboundSchema` instead. */
  export const inboundSchema = StripeCreateCheckoutSessionRequest$inboundSchema;
  /** @deprecated use `StripeCreateCheckoutSessionRequest$outboundSchema` instead. */
  export const outboundSchema =
    StripeCreateCheckoutSessionRequest$outboundSchema;
  /** @deprecated use `StripeCreateCheckoutSessionRequest$Outbound` instead. */
  export type Outbound = StripeCreateCheckoutSessionRequest$Outbound;
}

export function stripeCreateCheckoutSessionRequestToJSON(
  stripeCreateCheckoutSessionRequest: StripeCreateCheckoutSessionRequest,
): string {
  return JSON.stringify(
    StripeCreateCheckoutSessionRequest$outboundSchema.parse(
      stripeCreateCheckoutSessionRequest,
    ),
  );
}

export function stripeCreateCheckoutSessionRequestFromJSON(
  jsonString: string,
): SafeParseResult<StripeCreateCheckoutSessionRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      StripeCreateCheckoutSessionRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'StripeCreateCheckoutSessionRequest' from JSON`,
  );
}
