/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type MysqlSaveEnvironmentSecurity = {
  authorization: string;
};

export type MysqlSaveEnvironmentRequest = {
  mysqlId: string;
  env?: string | null | undefined;
};

export type MysqlSaveEnvironmentResponse = models.ErrorT | boolean;

/** @internal */
export const MysqlSaveEnvironmentSecurity$inboundSchema: z.ZodType<
  MysqlSaveEnvironmentSecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  Authorization: z.string(),
}).transform((v) => {
  return remap$(v, {
    "Authorization": "authorization",
  });
});

/** @internal */
export type MysqlSaveEnvironmentSecurity$Outbound = {
  Authorization: string;
};

/** @internal */
export const MysqlSaveEnvironmentSecurity$outboundSchema: z.ZodType<
  MysqlSaveEnvironmentSecurity$Outbound,
  z.ZodTypeDef,
  MysqlSaveEnvironmentSecurity
> = z.object({
  authorization: z.string(),
}).transform((v) => {
  return remap$(v, {
    authorization: "Authorization",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MysqlSaveEnvironmentSecurity$ {
  /** @deprecated use `MysqlSaveEnvironmentSecurity$inboundSchema` instead. */
  export const inboundSchema = MysqlSaveEnvironmentSecurity$inboundSchema;
  /** @deprecated use `MysqlSaveEnvironmentSecurity$outboundSchema` instead. */
  export const outboundSchema = MysqlSaveEnvironmentSecurity$outboundSchema;
  /** @deprecated use `MysqlSaveEnvironmentSecurity$Outbound` instead. */
  export type Outbound = MysqlSaveEnvironmentSecurity$Outbound;
}

export function mysqlSaveEnvironmentSecurityToJSON(
  mysqlSaveEnvironmentSecurity: MysqlSaveEnvironmentSecurity,
): string {
  return JSON.stringify(
    MysqlSaveEnvironmentSecurity$outboundSchema.parse(
      mysqlSaveEnvironmentSecurity,
    ),
  );
}

export function mysqlSaveEnvironmentSecurityFromJSON(
  jsonString: string,
): SafeParseResult<MysqlSaveEnvironmentSecurity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => MysqlSaveEnvironmentSecurity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'MysqlSaveEnvironmentSecurity' from JSON`,
  );
}

/** @internal */
export const MysqlSaveEnvironmentRequest$inboundSchema: z.ZodType<
  MysqlSaveEnvironmentRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  mysqlId: z.string(),
  env: z.nullable(z.string()).optional(),
});

/** @internal */
export type MysqlSaveEnvironmentRequest$Outbound = {
  mysqlId: string;
  env?: string | null | undefined;
};

/** @internal */
export const MysqlSaveEnvironmentRequest$outboundSchema: z.ZodType<
  MysqlSaveEnvironmentRequest$Outbound,
  z.ZodTypeDef,
  MysqlSaveEnvironmentRequest
> = z.object({
  mysqlId: z.string(),
  env: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MysqlSaveEnvironmentRequest$ {
  /** @deprecated use `MysqlSaveEnvironmentRequest$inboundSchema` instead. */
  export const inboundSchema = MysqlSaveEnvironmentRequest$inboundSchema;
  /** @deprecated use `MysqlSaveEnvironmentRequest$outboundSchema` instead. */
  export const outboundSchema = MysqlSaveEnvironmentRequest$outboundSchema;
  /** @deprecated use `MysqlSaveEnvironmentRequest$Outbound` instead. */
  export type Outbound = MysqlSaveEnvironmentRequest$Outbound;
}

export function mysqlSaveEnvironmentRequestToJSON(
  mysqlSaveEnvironmentRequest: MysqlSaveEnvironmentRequest,
): string {
  return JSON.stringify(
    MysqlSaveEnvironmentRequest$outboundSchema.parse(
      mysqlSaveEnvironmentRequest,
    ),
  );
}

export function mysqlSaveEnvironmentRequestFromJSON(
  jsonString: string,
): SafeParseResult<MysqlSaveEnvironmentRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => MysqlSaveEnvironmentRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'MysqlSaveEnvironmentRequest' from JSON`,
  );
}

/** @internal */
export const MysqlSaveEnvironmentResponse$inboundSchema: z.ZodType<
  MysqlSaveEnvironmentResponse,
  z.ZodTypeDef,
  unknown
> = z.union([models.ErrorT$inboundSchema, z.boolean()]);

/** @internal */
export type MysqlSaveEnvironmentResponse$Outbound =
  | models.ErrorT$Outbound
  | boolean;

/** @internal */
export const MysqlSaveEnvironmentResponse$outboundSchema: z.ZodType<
  MysqlSaveEnvironmentResponse$Outbound,
  z.ZodTypeDef,
  MysqlSaveEnvironmentResponse
> = z.union([models.ErrorT$outboundSchema, z.boolean()]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MysqlSaveEnvironmentResponse$ {
  /** @deprecated use `MysqlSaveEnvironmentResponse$inboundSchema` instead. */
  export const inboundSchema = MysqlSaveEnvironmentResponse$inboundSchema;
  /** @deprecated use `MysqlSaveEnvironmentResponse$outboundSchema` instead. */
  export const outboundSchema = MysqlSaveEnvironmentResponse$outboundSchema;
  /** @deprecated use `MysqlSaveEnvironmentResponse$Outbound` instead. */
  export type Outbound = MysqlSaveEnvironmentResponse$Outbound;
}

export function mysqlSaveEnvironmentResponseToJSON(
  mysqlSaveEnvironmentResponse: MysqlSaveEnvironmentResponse,
): string {
  return JSON.stringify(
    MysqlSaveEnvironmentResponse$outboundSchema.parse(
      mysqlSaveEnvironmentResponse,
    ),
  );
}

export function mysqlSaveEnvironmentResponseFromJSON(
  jsonString: string,
): SafeParseResult<MysqlSaveEnvironmentResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => MysqlSaveEnvironmentResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'MysqlSaveEnvironmentResponse' from JSON`,
  );
}
