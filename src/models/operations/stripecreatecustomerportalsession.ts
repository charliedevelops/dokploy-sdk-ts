/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type StripeCreateCustomerPortalSessionSecurity = {
  authorization: string;
};

/** @internal */
export const StripeCreateCustomerPortalSessionSecurity$inboundSchema: z.ZodType<
  StripeCreateCustomerPortalSessionSecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  Authorization: z.string(),
}).transform((v) => {
  return remap$(v, {
    "Authorization": "authorization",
  });
});

/** @internal */
export type StripeCreateCustomerPortalSessionSecurity$Outbound = {
  Authorization: string;
};

/** @internal */
export const StripeCreateCustomerPortalSessionSecurity$outboundSchema:
  z.ZodType<
    StripeCreateCustomerPortalSessionSecurity$Outbound,
    z.ZodTypeDef,
    StripeCreateCustomerPortalSessionSecurity
  > = z.object({
    authorization: z.string(),
  }).transform((v) => {
    return remap$(v, {
      authorization: "Authorization",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace StripeCreateCustomerPortalSessionSecurity$ {
  /** @deprecated use `StripeCreateCustomerPortalSessionSecurity$inboundSchema` instead. */
  export const inboundSchema =
    StripeCreateCustomerPortalSessionSecurity$inboundSchema;
  /** @deprecated use `StripeCreateCustomerPortalSessionSecurity$outboundSchema` instead. */
  export const outboundSchema =
    StripeCreateCustomerPortalSessionSecurity$outboundSchema;
  /** @deprecated use `StripeCreateCustomerPortalSessionSecurity$Outbound` instead. */
  export type Outbound = StripeCreateCustomerPortalSessionSecurity$Outbound;
}

export function stripeCreateCustomerPortalSessionSecurityToJSON(
  stripeCreateCustomerPortalSessionSecurity:
    StripeCreateCustomerPortalSessionSecurity,
): string {
  return JSON.stringify(
    StripeCreateCustomerPortalSessionSecurity$outboundSchema.parse(
      stripeCreateCustomerPortalSessionSecurity,
    ),
  );
}

export function stripeCreateCustomerPortalSessionSecurityFromJSON(
  jsonString: string,
): SafeParseResult<
  StripeCreateCustomerPortalSessionSecurity,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      StripeCreateCustomerPortalSessionSecurity$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'StripeCreateCustomerPortalSessionSecurity' from JSON`,
  );
}
