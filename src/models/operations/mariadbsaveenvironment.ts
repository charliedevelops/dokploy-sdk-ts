/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type MariadbSaveEnvironmentSecurity = {
  authorization: string;
};

export type MariadbSaveEnvironmentRequest = {
  env?: string | null | undefined;
  mariadbId: string;
};

export type MariadbSaveEnvironmentResponse = models.ErrorT | boolean;

/** @internal */
export const MariadbSaveEnvironmentSecurity$inboundSchema: z.ZodType<
  MariadbSaveEnvironmentSecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  Authorization: z.string(),
}).transform((v) => {
  return remap$(v, {
    "Authorization": "authorization",
  });
});

/** @internal */
export type MariadbSaveEnvironmentSecurity$Outbound = {
  Authorization: string;
};

/** @internal */
export const MariadbSaveEnvironmentSecurity$outboundSchema: z.ZodType<
  MariadbSaveEnvironmentSecurity$Outbound,
  z.ZodTypeDef,
  MariadbSaveEnvironmentSecurity
> = z.object({
  authorization: z.string(),
}).transform((v) => {
  return remap$(v, {
    authorization: "Authorization",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MariadbSaveEnvironmentSecurity$ {
  /** @deprecated use `MariadbSaveEnvironmentSecurity$inboundSchema` instead. */
  export const inboundSchema = MariadbSaveEnvironmentSecurity$inboundSchema;
  /** @deprecated use `MariadbSaveEnvironmentSecurity$outboundSchema` instead. */
  export const outboundSchema = MariadbSaveEnvironmentSecurity$outboundSchema;
  /** @deprecated use `MariadbSaveEnvironmentSecurity$Outbound` instead. */
  export type Outbound = MariadbSaveEnvironmentSecurity$Outbound;
}

export function mariadbSaveEnvironmentSecurityToJSON(
  mariadbSaveEnvironmentSecurity: MariadbSaveEnvironmentSecurity,
): string {
  return JSON.stringify(
    MariadbSaveEnvironmentSecurity$outboundSchema.parse(
      mariadbSaveEnvironmentSecurity,
    ),
  );
}

export function mariadbSaveEnvironmentSecurityFromJSON(
  jsonString: string,
): SafeParseResult<MariadbSaveEnvironmentSecurity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => MariadbSaveEnvironmentSecurity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'MariadbSaveEnvironmentSecurity' from JSON`,
  );
}

/** @internal */
export const MariadbSaveEnvironmentRequest$inboundSchema: z.ZodType<
  MariadbSaveEnvironmentRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  env: z.nullable(z.string()).optional(),
  mariadbId: z.string(),
});

/** @internal */
export type MariadbSaveEnvironmentRequest$Outbound = {
  env?: string | null | undefined;
  mariadbId: string;
};

/** @internal */
export const MariadbSaveEnvironmentRequest$outboundSchema: z.ZodType<
  MariadbSaveEnvironmentRequest$Outbound,
  z.ZodTypeDef,
  MariadbSaveEnvironmentRequest
> = z.object({
  env: z.nullable(z.string()).optional(),
  mariadbId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MariadbSaveEnvironmentRequest$ {
  /** @deprecated use `MariadbSaveEnvironmentRequest$inboundSchema` instead. */
  export const inboundSchema = MariadbSaveEnvironmentRequest$inboundSchema;
  /** @deprecated use `MariadbSaveEnvironmentRequest$outboundSchema` instead. */
  export const outboundSchema = MariadbSaveEnvironmentRequest$outboundSchema;
  /** @deprecated use `MariadbSaveEnvironmentRequest$Outbound` instead. */
  export type Outbound = MariadbSaveEnvironmentRequest$Outbound;
}

export function mariadbSaveEnvironmentRequestToJSON(
  mariadbSaveEnvironmentRequest: MariadbSaveEnvironmentRequest,
): string {
  return JSON.stringify(
    MariadbSaveEnvironmentRequest$outboundSchema.parse(
      mariadbSaveEnvironmentRequest,
    ),
  );
}

export function mariadbSaveEnvironmentRequestFromJSON(
  jsonString: string,
): SafeParseResult<MariadbSaveEnvironmentRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => MariadbSaveEnvironmentRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'MariadbSaveEnvironmentRequest' from JSON`,
  );
}

/** @internal */
export const MariadbSaveEnvironmentResponse$inboundSchema: z.ZodType<
  MariadbSaveEnvironmentResponse,
  z.ZodTypeDef,
  unknown
> = z.union([models.ErrorT$inboundSchema, z.boolean()]);

/** @internal */
export type MariadbSaveEnvironmentResponse$Outbound =
  | models.ErrorT$Outbound
  | boolean;

/** @internal */
export const MariadbSaveEnvironmentResponse$outboundSchema: z.ZodType<
  MariadbSaveEnvironmentResponse$Outbound,
  z.ZodTypeDef,
  MariadbSaveEnvironmentResponse
> = z.union([models.ErrorT$outboundSchema, z.boolean()]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MariadbSaveEnvironmentResponse$ {
  /** @deprecated use `MariadbSaveEnvironmentResponse$inboundSchema` instead. */
  export const inboundSchema = MariadbSaveEnvironmentResponse$inboundSchema;
  /** @deprecated use `MariadbSaveEnvironmentResponse$outboundSchema` instead. */
  export const outboundSchema = MariadbSaveEnvironmentResponse$outboundSchema;
  /** @deprecated use `MariadbSaveEnvironmentResponse$Outbound` instead. */
  export type Outbound = MariadbSaveEnvironmentResponse$Outbound;
}

export function mariadbSaveEnvironmentResponseToJSON(
  mariadbSaveEnvironmentResponse: MariadbSaveEnvironmentResponse,
): string {
  return JSON.stringify(
    MariadbSaveEnvironmentResponse$outboundSchema.parse(
      mariadbSaveEnvironmentResponse,
    ),
  );
}

export function mariadbSaveEnvironmentResponseFromJSON(
  jsonString: string,
): SafeParseResult<MariadbSaveEnvironmentResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => MariadbSaveEnvironmentResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'MariadbSaveEnvironmentResponse' from JSON`,
  );
}
