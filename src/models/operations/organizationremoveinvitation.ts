/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type OrganizationRemoveInvitationRequest = {
  invitationId: string;
};

/** @internal */
export const OrganizationRemoveInvitationRequest$inboundSchema: z.ZodType<
  OrganizationRemoveInvitationRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  invitationId: z.string(),
});

/** @internal */
export type OrganizationRemoveInvitationRequest$Outbound = {
  invitationId: string;
};

/** @internal */
export const OrganizationRemoveInvitationRequest$outboundSchema: z.ZodType<
  OrganizationRemoveInvitationRequest$Outbound,
  z.ZodTypeDef,
  OrganizationRemoveInvitationRequest
> = z.object({
  invitationId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OrganizationRemoveInvitationRequest$ {
  /** @deprecated use `OrganizationRemoveInvitationRequest$inboundSchema` instead. */
  export const inboundSchema =
    OrganizationRemoveInvitationRequest$inboundSchema;
  /** @deprecated use `OrganizationRemoveInvitationRequest$outboundSchema` instead. */
  export const outboundSchema =
    OrganizationRemoveInvitationRequest$outboundSchema;
  /** @deprecated use `OrganizationRemoveInvitationRequest$Outbound` instead. */
  export type Outbound = OrganizationRemoveInvitationRequest$Outbound;
}

export function organizationRemoveInvitationRequestToJSON(
  organizationRemoveInvitationRequest: OrganizationRemoveInvitationRequest,
): string {
  return JSON.stringify(
    OrganizationRemoveInvitationRequest$outboundSchema.parse(
      organizationRemoveInvitationRequest,
    ),
  );
}

export function organizationRemoveInvitationRequestFromJSON(
  jsonString: string,
): SafeParseResult<OrganizationRemoveInvitationRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      OrganizationRemoveInvitationRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'OrganizationRemoveInvitationRequest' from JSON`,
  );
}
