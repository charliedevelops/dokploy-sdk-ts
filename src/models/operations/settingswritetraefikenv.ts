/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type SettingsWriteTraefikEnvRequest = {
  env: string;
  serverId?: string | undefined;
};

/** @internal */
export const SettingsWriteTraefikEnvRequest$inboundSchema: z.ZodType<
  SettingsWriteTraefikEnvRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  env: z.string(),
  serverId: z.string().optional(),
});

/** @internal */
export type SettingsWriteTraefikEnvRequest$Outbound = {
  env: string;
  serverId?: string | undefined;
};

/** @internal */
export const SettingsWriteTraefikEnvRequest$outboundSchema: z.ZodType<
  SettingsWriteTraefikEnvRequest$Outbound,
  z.ZodTypeDef,
  SettingsWriteTraefikEnvRequest
> = z.object({
  env: z.string(),
  serverId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SettingsWriteTraefikEnvRequest$ {
  /** @deprecated use `SettingsWriteTraefikEnvRequest$inboundSchema` instead. */
  export const inboundSchema = SettingsWriteTraefikEnvRequest$inboundSchema;
  /** @deprecated use `SettingsWriteTraefikEnvRequest$outboundSchema` instead. */
  export const outboundSchema = SettingsWriteTraefikEnvRequest$outboundSchema;
  /** @deprecated use `SettingsWriteTraefikEnvRequest$Outbound` instead. */
  export type Outbound = SettingsWriteTraefikEnvRequest$Outbound;
}

export function settingsWriteTraefikEnvRequestToJSON(
  settingsWriteTraefikEnvRequest: SettingsWriteTraefikEnvRequest,
): string {
  return JSON.stringify(
    SettingsWriteTraefikEnvRequest$outboundSchema.parse(
      settingsWriteTraefikEnvRequest,
    ),
  );
}

export function settingsWriteTraefikEnvRequestFromJSON(
  jsonString: string,
): SafeParseResult<SettingsWriteTraefikEnvRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SettingsWriteTraefikEnvRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SettingsWriteTraefikEnvRequest' from JSON`,
  );
}
