/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type BackupManualBackupWebServerRequest = {
  backupId: string;
};

/** @internal */
export const BackupManualBackupWebServerRequest$inboundSchema: z.ZodType<
  BackupManualBackupWebServerRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  backupId: z.string(),
});

/** @internal */
export type BackupManualBackupWebServerRequest$Outbound = {
  backupId: string;
};

/** @internal */
export const BackupManualBackupWebServerRequest$outboundSchema: z.ZodType<
  BackupManualBackupWebServerRequest$Outbound,
  z.ZodTypeDef,
  BackupManualBackupWebServerRequest
> = z.object({
  backupId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BackupManualBackupWebServerRequest$ {
  /** @deprecated use `BackupManualBackupWebServerRequest$inboundSchema` instead. */
  export const inboundSchema = BackupManualBackupWebServerRequest$inboundSchema;
  /** @deprecated use `BackupManualBackupWebServerRequest$outboundSchema` instead. */
  export const outboundSchema =
    BackupManualBackupWebServerRequest$outboundSchema;
  /** @deprecated use `BackupManualBackupWebServerRequest$Outbound` instead. */
  export type Outbound = BackupManualBackupWebServerRequest$Outbound;
}

export function backupManualBackupWebServerRequestToJSON(
  backupManualBackupWebServerRequest: BackupManualBackupWebServerRequest,
): string {
  return JSON.stringify(
    BackupManualBackupWebServerRequest$outboundSchema.parse(
      backupManualBackupWebServerRequest,
    ),
  );
}

export function backupManualBackupWebServerRequestFromJSON(
  jsonString: string,
): SafeParseResult<BackupManualBackupWebServerRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      BackupManualBackupWebServerRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'BackupManualBackupWebServerRequest' from JSON`,
  );
}
