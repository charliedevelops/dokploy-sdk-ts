/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UserSendInvitationSecurity = {
  authorization: string;
};

export type UserSendInvitationRequest = {
  invitationId: string;
  notificationId: string;
};

/** @internal */
export const UserSendInvitationSecurity$inboundSchema: z.ZodType<
  UserSendInvitationSecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  Authorization: z.string(),
}).transform((v) => {
  return remap$(v, {
    "Authorization": "authorization",
  });
});

/** @internal */
export type UserSendInvitationSecurity$Outbound = {
  Authorization: string;
};

/** @internal */
export const UserSendInvitationSecurity$outboundSchema: z.ZodType<
  UserSendInvitationSecurity$Outbound,
  z.ZodTypeDef,
  UserSendInvitationSecurity
> = z.object({
  authorization: z.string(),
}).transform((v) => {
  return remap$(v, {
    authorization: "Authorization",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UserSendInvitationSecurity$ {
  /** @deprecated use `UserSendInvitationSecurity$inboundSchema` instead. */
  export const inboundSchema = UserSendInvitationSecurity$inboundSchema;
  /** @deprecated use `UserSendInvitationSecurity$outboundSchema` instead. */
  export const outboundSchema = UserSendInvitationSecurity$outboundSchema;
  /** @deprecated use `UserSendInvitationSecurity$Outbound` instead. */
  export type Outbound = UserSendInvitationSecurity$Outbound;
}

export function userSendInvitationSecurityToJSON(
  userSendInvitationSecurity: UserSendInvitationSecurity,
): string {
  return JSON.stringify(
    UserSendInvitationSecurity$outboundSchema.parse(userSendInvitationSecurity),
  );
}

export function userSendInvitationSecurityFromJSON(
  jsonString: string,
): SafeParseResult<UserSendInvitationSecurity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UserSendInvitationSecurity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UserSendInvitationSecurity' from JSON`,
  );
}

/** @internal */
export const UserSendInvitationRequest$inboundSchema: z.ZodType<
  UserSendInvitationRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  invitationId: z.string(),
  notificationId: z.string(),
});

/** @internal */
export type UserSendInvitationRequest$Outbound = {
  invitationId: string;
  notificationId: string;
};

/** @internal */
export const UserSendInvitationRequest$outboundSchema: z.ZodType<
  UserSendInvitationRequest$Outbound,
  z.ZodTypeDef,
  UserSendInvitationRequest
> = z.object({
  invitationId: z.string(),
  notificationId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UserSendInvitationRequest$ {
  /** @deprecated use `UserSendInvitationRequest$inboundSchema` instead. */
  export const inboundSchema = UserSendInvitationRequest$inboundSchema;
  /** @deprecated use `UserSendInvitationRequest$outboundSchema` instead. */
  export const outboundSchema = UserSendInvitationRequest$outboundSchema;
  /** @deprecated use `UserSendInvitationRequest$Outbound` instead. */
  export type Outbound = UserSendInvitationRequest$Outbound;
}

export function userSendInvitationRequestToJSON(
  userSendInvitationRequest: UserSendInvitationRequest,
): string {
  return JSON.stringify(
    UserSendInvitationRequest$outboundSchema.parse(userSendInvitationRequest),
  );
}

export function userSendInvitationRequestFromJSON(
  jsonString: string,
): SafeParseResult<UserSendInvitationRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UserSendInvitationRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UserSendInvitationRequest' from JSON`,
  );
}
