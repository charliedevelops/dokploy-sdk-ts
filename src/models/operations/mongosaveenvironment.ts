/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type MongoSaveEnvironmentSecurity = {
  authorization: string;
};

export type MongoSaveEnvironmentRequest = {
  mongoId: string;
  env?: string | null | undefined;
};

export type MongoSaveEnvironmentResponse = models.ErrorT | boolean;

/** @internal */
export const MongoSaveEnvironmentSecurity$inboundSchema: z.ZodType<
  MongoSaveEnvironmentSecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  Authorization: z.string(),
}).transform((v) => {
  return remap$(v, {
    "Authorization": "authorization",
  });
});

/** @internal */
export type MongoSaveEnvironmentSecurity$Outbound = {
  Authorization: string;
};

/** @internal */
export const MongoSaveEnvironmentSecurity$outboundSchema: z.ZodType<
  MongoSaveEnvironmentSecurity$Outbound,
  z.ZodTypeDef,
  MongoSaveEnvironmentSecurity
> = z.object({
  authorization: z.string(),
}).transform((v) => {
  return remap$(v, {
    authorization: "Authorization",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MongoSaveEnvironmentSecurity$ {
  /** @deprecated use `MongoSaveEnvironmentSecurity$inboundSchema` instead. */
  export const inboundSchema = MongoSaveEnvironmentSecurity$inboundSchema;
  /** @deprecated use `MongoSaveEnvironmentSecurity$outboundSchema` instead. */
  export const outboundSchema = MongoSaveEnvironmentSecurity$outboundSchema;
  /** @deprecated use `MongoSaveEnvironmentSecurity$Outbound` instead. */
  export type Outbound = MongoSaveEnvironmentSecurity$Outbound;
}

export function mongoSaveEnvironmentSecurityToJSON(
  mongoSaveEnvironmentSecurity: MongoSaveEnvironmentSecurity,
): string {
  return JSON.stringify(
    MongoSaveEnvironmentSecurity$outboundSchema.parse(
      mongoSaveEnvironmentSecurity,
    ),
  );
}

export function mongoSaveEnvironmentSecurityFromJSON(
  jsonString: string,
): SafeParseResult<MongoSaveEnvironmentSecurity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => MongoSaveEnvironmentSecurity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'MongoSaveEnvironmentSecurity' from JSON`,
  );
}

/** @internal */
export const MongoSaveEnvironmentRequest$inboundSchema: z.ZodType<
  MongoSaveEnvironmentRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  mongoId: z.string(),
  env: z.nullable(z.string()).optional(),
});

/** @internal */
export type MongoSaveEnvironmentRequest$Outbound = {
  mongoId: string;
  env?: string | null | undefined;
};

/** @internal */
export const MongoSaveEnvironmentRequest$outboundSchema: z.ZodType<
  MongoSaveEnvironmentRequest$Outbound,
  z.ZodTypeDef,
  MongoSaveEnvironmentRequest
> = z.object({
  mongoId: z.string(),
  env: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MongoSaveEnvironmentRequest$ {
  /** @deprecated use `MongoSaveEnvironmentRequest$inboundSchema` instead. */
  export const inboundSchema = MongoSaveEnvironmentRequest$inboundSchema;
  /** @deprecated use `MongoSaveEnvironmentRequest$outboundSchema` instead. */
  export const outboundSchema = MongoSaveEnvironmentRequest$outboundSchema;
  /** @deprecated use `MongoSaveEnvironmentRequest$Outbound` instead. */
  export type Outbound = MongoSaveEnvironmentRequest$Outbound;
}

export function mongoSaveEnvironmentRequestToJSON(
  mongoSaveEnvironmentRequest: MongoSaveEnvironmentRequest,
): string {
  return JSON.stringify(
    MongoSaveEnvironmentRequest$outboundSchema.parse(
      mongoSaveEnvironmentRequest,
    ),
  );
}

export function mongoSaveEnvironmentRequestFromJSON(
  jsonString: string,
): SafeParseResult<MongoSaveEnvironmentRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => MongoSaveEnvironmentRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'MongoSaveEnvironmentRequest' from JSON`,
  );
}

/** @internal */
export const MongoSaveEnvironmentResponse$inboundSchema: z.ZodType<
  MongoSaveEnvironmentResponse,
  z.ZodTypeDef,
  unknown
> = z.union([models.ErrorT$inboundSchema, z.boolean()]);

/** @internal */
export type MongoSaveEnvironmentResponse$Outbound =
  | models.ErrorT$Outbound
  | boolean;

/** @internal */
export const MongoSaveEnvironmentResponse$outboundSchema: z.ZodType<
  MongoSaveEnvironmentResponse$Outbound,
  z.ZodTypeDef,
  MongoSaveEnvironmentResponse
> = z.union([models.ErrorT$outboundSchema, z.boolean()]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MongoSaveEnvironmentResponse$ {
  /** @deprecated use `MongoSaveEnvironmentResponse$inboundSchema` instead. */
  export const inboundSchema = MongoSaveEnvironmentResponse$inboundSchema;
  /** @deprecated use `MongoSaveEnvironmentResponse$outboundSchema` instead. */
  export const outboundSchema = MongoSaveEnvironmentResponse$outboundSchema;
  /** @deprecated use `MongoSaveEnvironmentResponse$Outbound` instead. */
  export type Outbound = MongoSaveEnvironmentResponse$Outbound;
}

export function mongoSaveEnvironmentResponseToJSON(
  mongoSaveEnvironmentResponse: MongoSaveEnvironmentResponse,
): string {
  return JSON.stringify(
    MongoSaveEnvironmentResponse$outboundSchema.parse(
      mongoSaveEnvironmentResponse,
    ),
  );
}

export function mongoSaveEnvironmentResponseFromJSON(
  jsonString: string,
): SafeParseResult<MongoSaveEnvironmentResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => MongoSaveEnvironmentResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'MongoSaveEnvironmentResponse' from JSON`,
  );
}
