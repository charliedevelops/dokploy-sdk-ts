/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type NotificationCreateDiscordRequest = {
  appBuildError: boolean;
  appDeploy: boolean;
  databaseBackup: boolean;
  decoration: boolean;
  dockerCleanup: boolean;
  dokployRestart: boolean;
  name: string;
  serverThreshold: boolean;
  webhookUrl: string;
};

/** @internal */
export const NotificationCreateDiscordRequest$inboundSchema: z.ZodType<
  NotificationCreateDiscordRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  appBuildError: z.boolean(),
  appDeploy: z.boolean(),
  databaseBackup: z.boolean(),
  decoration: z.boolean(),
  dockerCleanup: z.boolean(),
  dokployRestart: z.boolean(),
  name: z.string(),
  serverThreshold: z.boolean(),
  webhookUrl: z.string(),
});

/** @internal */
export type NotificationCreateDiscordRequest$Outbound = {
  appBuildError: boolean;
  appDeploy: boolean;
  databaseBackup: boolean;
  decoration: boolean;
  dockerCleanup: boolean;
  dokployRestart: boolean;
  name: string;
  serverThreshold: boolean;
  webhookUrl: string;
};

/** @internal */
export const NotificationCreateDiscordRequest$outboundSchema: z.ZodType<
  NotificationCreateDiscordRequest$Outbound,
  z.ZodTypeDef,
  NotificationCreateDiscordRequest
> = z.object({
  appBuildError: z.boolean(),
  appDeploy: z.boolean(),
  databaseBackup: z.boolean(),
  decoration: z.boolean(),
  dockerCleanup: z.boolean(),
  dokployRestart: z.boolean(),
  name: z.string(),
  serverThreshold: z.boolean(),
  webhookUrl: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NotificationCreateDiscordRequest$ {
  /** @deprecated use `NotificationCreateDiscordRequest$inboundSchema` instead. */
  export const inboundSchema = NotificationCreateDiscordRequest$inboundSchema;
  /** @deprecated use `NotificationCreateDiscordRequest$outboundSchema` instead. */
  export const outboundSchema = NotificationCreateDiscordRequest$outboundSchema;
  /** @deprecated use `NotificationCreateDiscordRequest$Outbound` instead. */
  export type Outbound = NotificationCreateDiscordRequest$Outbound;
}

export function notificationCreateDiscordRequestToJSON(
  notificationCreateDiscordRequest: NotificationCreateDiscordRequest,
): string {
  return JSON.stringify(
    NotificationCreateDiscordRequest$outboundSchema.parse(
      notificationCreateDiscordRequest,
    ),
  );
}

export function notificationCreateDiscordRequestFromJSON(
  jsonString: string,
): SafeParseResult<NotificationCreateDiscordRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => NotificationCreateDiscordRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'NotificationCreateDiscordRequest' from JSON`,
  );
}
