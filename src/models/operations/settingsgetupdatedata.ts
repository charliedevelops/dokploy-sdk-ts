/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type SettingsGetUpdateDataSecurity = {
  authorization: string;
};

/** @internal */
export const SettingsGetUpdateDataSecurity$inboundSchema: z.ZodType<
  SettingsGetUpdateDataSecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  Authorization: z.string(),
}).transform((v) => {
  return remap$(v, {
    "Authorization": "authorization",
  });
});

/** @internal */
export type SettingsGetUpdateDataSecurity$Outbound = {
  Authorization: string;
};

/** @internal */
export const SettingsGetUpdateDataSecurity$outboundSchema: z.ZodType<
  SettingsGetUpdateDataSecurity$Outbound,
  z.ZodTypeDef,
  SettingsGetUpdateDataSecurity
> = z.object({
  authorization: z.string(),
}).transform((v) => {
  return remap$(v, {
    authorization: "Authorization",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SettingsGetUpdateDataSecurity$ {
  /** @deprecated use `SettingsGetUpdateDataSecurity$inboundSchema` instead. */
  export const inboundSchema = SettingsGetUpdateDataSecurity$inboundSchema;
  /** @deprecated use `SettingsGetUpdateDataSecurity$outboundSchema` instead. */
  export const outboundSchema = SettingsGetUpdateDataSecurity$outboundSchema;
  /** @deprecated use `SettingsGetUpdateDataSecurity$Outbound` instead. */
  export type Outbound = SettingsGetUpdateDataSecurity$Outbound;
}

export function settingsGetUpdateDataSecurityToJSON(
  settingsGetUpdateDataSecurity: SettingsGetUpdateDataSecurity,
): string {
  return JSON.stringify(
    SettingsGetUpdateDataSecurity$outboundSchema.parse(
      settingsGetUpdateDataSecurity,
    ),
  );
}

export function settingsGetUpdateDataSecurityFromJSON(
  jsonString: string,
): SafeParseResult<SettingsGetUpdateDataSecurity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SettingsGetUpdateDataSecurity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SettingsGetUpdateDataSecurity' from JSON`,
  );
}
