/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DomainCanGenerateTraefikMeDomainsRequest = {
  serverId: string;
};

/** @internal */
export const DomainCanGenerateTraefikMeDomainsRequest$inboundSchema: z.ZodType<
  DomainCanGenerateTraefikMeDomainsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  serverId: z.string(),
});

/** @internal */
export type DomainCanGenerateTraefikMeDomainsRequest$Outbound = {
  serverId: string;
};

/** @internal */
export const DomainCanGenerateTraefikMeDomainsRequest$outboundSchema: z.ZodType<
  DomainCanGenerateTraefikMeDomainsRequest$Outbound,
  z.ZodTypeDef,
  DomainCanGenerateTraefikMeDomainsRequest
> = z.object({
  serverId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DomainCanGenerateTraefikMeDomainsRequest$ {
  /** @deprecated use `DomainCanGenerateTraefikMeDomainsRequest$inboundSchema` instead. */
  export const inboundSchema =
    DomainCanGenerateTraefikMeDomainsRequest$inboundSchema;
  /** @deprecated use `DomainCanGenerateTraefikMeDomainsRequest$outboundSchema` instead. */
  export const outboundSchema =
    DomainCanGenerateTraefikMeDomainsRequest$outboundSchema;
  /** @deprecated use `DomainCanGenerateTraefikMeDomainsRequest$Outbound` instead. */
  export type Outbound = DomainCanGenerateTraefikMeDomainsRequest$Outbound;
}

export function domainCanGenerateTraefikMeDomainsRequestToJSON(
  domainCanGenerateTraefikMeDomainsRequest:
    DomainCanGenerateTraefikMeDomainsRequest,
): string {
  return JSON.stringify(
    DomainCanGenerateTraefikMeDomainsRequest$outboundSchema.parse(
      domainCanGenerateTraefikMeDomainsRequest,
    ),
  );
}

export function domainCanGenerateTraefikMeDomainsRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  DomainCanGenerateTraefikMeDomainsRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DomainCanGenerateTraefikMeDomainsRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DomainCanGenerateTraefikMeDomainsRequest' from JSON`,
  );
}
