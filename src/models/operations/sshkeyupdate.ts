/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type SshKeyUpdateRequest = {
  description?: string | null | undefined;
  lastUsedAt?: string | null | undefined;
  name?: string | undefined;
  sshKeyId: string;
};

/** @internal */
export const SshKeyUpdateRequest$inboundSchema: z.ZodType<
  SshKeyUpdateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  description: z.nullable(z.string()).optional(),
  lastUsedAt: z.nullable(z.string()).optional(),
  name: z.string().optional(),
  sshKeyId: z.string(),
});

/** @internal */
export type SshKeyUpdateRequest$Outbound = {
  description?: string | null | undefined;
  lastUsedAt?: string | null | undefined;
  name?: string | undefined;
  sshKeyId: string;
};

/** @internal */
export const SshKeyUpdateRequest$outboundSchema: z.ZodType<
  SshKeyUpdateRequest$Outbound,
  z.ZodTypeDef,
  SshKeyUpdateRequest
> = z.object({
  description: z.nullable(z.string()).optional(),
  lastUsedAt: z.nullable(z.string()).optional(),
  name: z.string().optional(),
  sshKeyId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SshKeyUpdateRequest$ {
  /** @deprecated use `SshKeyUpdateRequest$inboundSchema` instead. */
  export const inboundSchema = SshKeyUpdateRequest$inboundSchema;
  /** @deprecated use `SshKeyUpdateRequest$outboundSchema` instead. */
  export const outboundSchema = SshKeyUpdateRequest$outboundSchema;
  /** @deprecated use `SshKeyUpdateRequest$Outbound` instead. */
  export type Outbound = SshKeyUpdateRequest$Outbound;
}

export function sshKeyUpdateRequestToJSON(
  sshKeyUpdateRequest: SshKeyUpdateRequest,
): string {
  return JSON.stringify(
    SshKeyUpdateRequest$outboundSchema.parse(sshKeyUpdateRequest),
  );
}

export function sshKeyUpdateRequestFromJSON(
  jsonString: string,
): SafeParseResult<SshKeyUpdateRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SshKeyUpdateRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SshKeyUpdateRequest' from JSON`,
  );
}
