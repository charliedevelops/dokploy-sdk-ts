/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type RedisSaveEnvironmentSecurity = {
  authorization: string;
};

export type RedisSaveEnvironmentRequest = {
  redisId: string;
  env?: string | null | undefined;
};

export type RedisSaveEnvironmentResponse = models.ErrorT | boolean;

/** @internal */
export const RedisSaveEnvironmentSecurity$inboundSchema: z.ZodType<
  RedisSaveEnvironmentSecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  Authorization: z.string(),
}).transform((v) => {
  return remap$(v, {
    "Authorization": "authorization",
  });
});

/** @internal */
export type RedisSaveEnvironmentSecurity$Outbound = {
  Authorization: string;
};

/** @internal */
export const RedisSaveEnvironmentSecurity$outboundSchema: z.ZodType<
  RedisSaveEnvironmentSecurity$Outbound,
  z.ZodTypeDef,
  RedisSaveEnvironmentSecurity
> = z.object({
  authorization: z.string(),
}).transform((v) => {
  return remap$(v, {
    authorization: "Authorization",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RedisSaveEnvironmentSecurity$ {
  /** @deprecated use `RedisSaveEnvironmentSecurity$inboundSchema` instead. */
  export const inboundSchema = RedisSaveEnvironmentSecurity$inboundSchema;
  /** @deprecated use `RedisSaveEnvironmentSecurity$outboundSchema` instead. */
  export const outboundSchema = RedisSaveEnvironmentSecurity$outboundSchema;
  /** @deprecated use `RedisSaveEnvironmentSecurity$Outbound` instead. */
  export type Outbound = RedisSaveEnvironmentSecurity$Outbound;
}

export function redisSaveEnvironmentSecurityToJSON(
  redisSaveEnvironmentSecurity: RedisSaveEnvironmentSecurity,
): string {
  return JSON.stringify(
    RedisSaveEnvironmentSecurity$outboundSchema.parse(
      redisSaveEnvironmentSecurity,
    ),
  );
}

export function redisSaveEnvironmentSecurityFromJSON(
  jsonString: string,
): SafeParseResult<RedisSaveEnvironmentSecurity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RedisSaveEnvironmentSecurity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RedisSaveEnvironmentSecurity' from JSON`,
  );
}

/** @internal */
export const RedisSaveEnvironmentRequest$inboundSchema: z.ZodType<
  RedisSaveEnvironmentRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  redisId: z.string(),
  env: z.nullable(z.string()).optional(),
});

/** @internal */
export type RedisSaveEnvironmentRequest$Outbound = {
  redisId: string;
  env?: string | null | undefined;
};

/** @internal */
export const RedisSaveEnvironmentRequest$outboundSchema: z.ZodType<
  RedisSaveEnvironmentRequest$Outbound,
  z.ZodTypeDef,
  RedisSaveEnvironmentRequest
> = z.object({
  redisId: z.string(),
  env: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RedisSaveEnvironmentRequest$ {
  /** @deprecated use `RedisSaveEnvironmentRequest$inboundSchema` instead. */
  export const inboundSchema = RedisSaveEnvironmentRequest$inboundSchema;
  /** @deprecated use `RedisSaveEnvironmentRequest$outboundSchema` instead. */
  export const outboundSchema = RedisSaveEnvironmentRequest$outboundSchema;
  /** @deprecated use `RedisSaveEnvironmentRequest$Outbound` instead. */
  export type Outbound = RedisSaveEnvironmentRequest$Outbound;
}

export function redisSaveEnvironmentRequestToJSON(
  redisSaveEnvironmentRequest: RedisSaveEnvironmentRequest,
): string {
  return JSON.stringify(
    RedisSaveEnvironmentRequest$outboundSchema.parse(
      redisSaveEnvironmentRequest,
    ),
  );
}

export function redisSaveEnvironmentRequestFromJSON(
  jsonString: string,
): SafeParseResult<RedisSaveEnvironmentRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RedisSaveEnvironmentRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RedisSaveEnvironmentRequest' from JSON`,
  );
}

/** @internal */
export const RedisSaveEnvironmentResponse$inboundSchema: z.ZodType<
  RedisSaveEnvironmentResponse,
  z.ZodTypeDef,
  unknown
> = z.union([models.ErrorT$inboundSchema, z.boolean()]);

/** @internal */
export type RedisSaveEnvironmentResponse$Outbound =
  | models.ErrorT$Outbound
  | boolean;

/** @internal */
export const RedisSaveEnvironmentResponse$outboundSchema: z.ZodType<
  RedisSaveEnvironmentResponse$Outbound,
  z.ZodTypeDef,
  RedisSaveEnvironmentResponse
> = z.union([models.ErrorT$outboundSchema, z.boolean()]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RedisSaveEnvironmentResponse$ {
  /** @deprecated use `RedisSaveEnvironmentResponse$inboundSchema` instead. */
  export const inboundSchema = RedisSaveEnvironmentResponse$inboundSchema;
  /** @deprecated use `RedisSaveEnvironmentResponse$outboundSchema` instead. */
  export const outboundSchema = RedisSaveEnvironmentResponse$outboundSchema;
  /** @deprecated use `RedisSaveEnvironmentResponse$Outbound` instead. */
  export type Outbound = RedisSaveEnvironmentResponse$Outbound;
}

export function redisSaveEnvironmentResponseToJSON(
  redisSaveEnvironmentResponse: RedisSaveEnvironmentResponse,
): string {
  return JSON.stringify(
    RedisSaveEnvironmentResponse$outboundSchema.parse(
      redisSaveEnvironmentResponse,
    ),
  );
}

export function redisSaveEnvironmentResponseFromJSON(
  jsonString: string,
): SafeParseResult<RedisSaveEnvironmentResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RedisSaveEnvironmentResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RedisSaveEnvironmentResponse' from JSON`,
  );
}
