/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UserCheckUserOrganizationsRequest = {
  userId: string;
};

/** @internal */
export const UserCheckUserOrganizationsRequest$inboundSchema: z.ZodType<
  UserCheckUserOrganizationsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  userId: z.string(),
});

/** @internal */
export type UserCheckUserOrganizationsRequest$Outbound = {
  userId: string;
};

/** @internal */
export const UserCheckUserOrganizationsRequest$outboundSchema: z.ZodType<
  UserCheckUserOrganizationsRequest$Outbound,
  z.ZodTypeDef,
  UserCheckUserOrganizationsRequest
> = z.object({
  userId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UserCheckUserOrganizationsRequest$ {
  /** @deprecated use `UserCheckUserOrganizationsRequest$inboundSchema` instead. */
  export const inboundSchema = UserCheckUserOrganizationsRequest$inboundSchema;
  /** @deprecated use `UserCheckUserOrganizationsRequest$outboundSchema` instead. */
  export const outboundSchema =
    UserCheckUserOrganizationsRequest$outboundSchema;
  /** @deprecated use `UserCheckUserOrganizationsRequest$Outbound` instead. */
  export type Outbound = UserCheckUserOrganizationsRequest$Outbound;
}

export function userCheckUserOrganizationsRequestToJSON(
  userCheckUserOrganizationsRequest: UserCheckUserOrganizationsRequest,
): string {
  return JSON.stringify(
    UserCheckUserOrganizationsRequest$outboundSchema.parse(
      userCheckUserOrganizationsRequest,
    ),
  );
}

export function userCheckUserOrganizationsRequestFromJSON(
  jsonString: string,
): SafeParseResult<UserCheckUserOrganizationsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UserCheckUserOrganizationsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UserCheckUserOrganizationsRequest' from JSON`,
  );
}
