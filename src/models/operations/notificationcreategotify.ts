/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type NotificationCreateGotifyRequest = {
  appBuildError: boolean;
  appDeploy: boolean;
  appToken: string;
  databaseBackup: boolean;
  decoration: boolean;
  dockerCleanup: boolean;
  dokployRestart: boolean;
  name: string;
  priority: number;
  serverUrl: string;
};

/** @internal */
export const NotificationCreateGotifyRequest$inboundSchema: z.ZodType<
  NotificationCreateGotifyRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  appBuildError: z.boolean(),
  appDeploy: z.boolean(),
  appToken: z.string(),
  databaseBackup: z.boolean(),
  decoration: z.boolean(),
  dockerCleanup: z.boolean(),
  dokployRestart: z.boolean(),
  name: z.string(),
  priority: z.number(),
  serverUrl: z.string(),
});

/** @internal */
export type NotificationCreateGotifyRequest$Outbound = {
  appBuildError: boolean;
  appDeploy: boolean;
  appToken: string;
  databaseBackup: boolean;
  decoration: boolean;
  dockerCleanup: boolean;
  dokployRestart: boolean;
  name: string;
  priority: number;
  serverUrl: string;
};

/** @internal */
export const NotificationCreateGotifyRequest$outboundSchema: z.ZodType<
  NotificationCreateGotifyRequest$Outbound,
  z.ZodTypeDef,
  NotificationCreateGotifyRequest
> = z.object({
  appBuildError: z.boolean(),
  appDeploy: z.boolean(),
  appToken: z.string(),
  databaseBackup: z.boolean(),
  decoration: z.boolean(),
  dockerCleanup: z.boolean(),
  dokployRestart: z.boolean(),
  name: z.string(),
  priority: z.number(),
  serverUrl: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NotificationCreateGotifyRequest$ {
  /** @deprecated use `NotificationCreateGotifyRequest$inboundSchema` instead. */
  export const inboundSchema = NotificationCreateGotifyRequest$inboundSchema;
  /** @deprecated use `NotificationCreateGotifyRequest$outboundSchema` instead. */
  export const outboundSchema = NotificationCreateGotifyRequest$outboundSchema;
  /** @deprecated use `NotificationCreateGotifyRequest$Outbound` instead. */
  export type Outbound = NotificationCreateGotifyRequest$Outbound;
}

export function notificationCreateGotifyRequestToJSON(
  notificationCreateGotifyRequest: NotificationCreateGotifyRequest,
): string {
  return JSON.stringify(
    NotificationCreateGotifyRequest$outboundSchema.parse(
      notificationCreateGotifyRequest,
    ),
  );
}

export function notificationCreateGotifyRequestFromJSON(
  jsonString: string,
): SafeParseResult<NotificationCreateGotifyRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => NotificationCreateGotifyRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'NotificationCreateGotifyRequest' from JSON`,
  );
}
