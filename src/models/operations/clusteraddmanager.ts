/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ClusterAddManagerRequest = {
  serverId?: string | undefined;
};

/** @internal */
export const ClusterAddManagerRequest$inboundSchema: z.ZodType<
  ClusterAddManagerRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  serverId: z.string().optional(),
});

/** @internal */
export type ClusterAddManagerRequest$Outbound = {
  serverId?: string | undefined;
};

/** @internal */
export const ClusterAddManagerRequest$outboundSchema: z.ZodType<
  ClusterAddManagerRequest$Outbound,
  z.ZodTypeDef,
  ClusterAddManagerRequest
> = z.object({
  serverId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ClusterAddManagerRequest$ {
  /** @deprecated use `ClusterAddManagerRequest$inboundSchema` instead. */
  export const inboundSchema = ClusterAddManagerRequest$inboundSchema;
  /** @deprecated use `ClusterAddManagerRequest$outboundSchema` instead. */
  export const outboundSchema = ClusterAddManagerRequest$outboundSchema;
  /** @deprecated use `ClusterAddManagerRequest$Outbound` instead. */
  export type Outbound = ClusterAddManagerRequest$Outbound;
}

export function clusterAddManagerRequestToJSON(
  clusterAddManagerRequest: ClusterAddManagerRequest,
): string {
  return JSON.stringify(
    ClusterAddManagerRequest$outboundSchema.parse(clusterAddManagerRequest),
  );
}

export function clusterAddManagerRequestFromJSON(
  jsonString: string,
): SafeParseResult<ClusterAddManagerRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ClusterAddManagerRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ClusterAddManagerRequest' from JSON`,
  );
}
