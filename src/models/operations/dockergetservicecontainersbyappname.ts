/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DockerGetServiceContainersByAppNameRequest = {
  appName: string;
  serverId?: string | undefined;
};

/** @internal */
export const DockerGetServiceContainersByAppNameRequest$inboundSchema:
  z.ZodType<DockerGetServiceContainersByAppNameRequest, z.ZodTypeDef, unknown> =
    z.object({
      appName: z.string(),
      serverId: z.string().optional(),
    });

/** @internal */
export type DockerGetServiceContainersByAppNameRequest$Outbound = {
  appName: string;
  serverId?: string | undefined;
};

/** @internal */
export const DockerGetServiceContainersByAppNameRequest$outboundSchema:
  z.ZodType<
    DockerGetServiceContainersByAppNameRequest$Outbound,
    z.ZodTypeDef,
    DockerGetServiceContainersByAppNameRequest
  > = z.object({
    appName: z.string(),
    serverId: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DockerGetServiceContainersByAppNameRequest$ {
  /** @deprecated use `DockerGetServiceContainersByAppNameRequest$inboundSchema` instead. */
  export const inboundSchema =
    DockerGetServiceContainersByAppNameRequest$inboundSchema;
  /** @deprecated use `DockerGetServiceContainersByAppNameRequest$outboundSchema` instead. */
  export const outboundSchema =
    DockerGetServiceContainersByAppNameRequest$outboundSchema;
  /** @deprecated use `DockerGetServiceContainersByAppNameRequest$Outbound` instead. */
  export type Outbound = DockerGetServiceContainersByAppNameRequest$Outbound;
}

export function dockerGetServiceContainersByAppNameRequestToJSON(
  dockerGetServiceContainersByAppNameRequest:
    DockerGetServiceContainersByAppNameRequest,
): string {
  return JSON.stringify(
    DockerGetServiceContainersByAppNameRequest$outboundSchema.parse(
      dockerGetServiceContainersByAppNameRequest,
    ),
  );
}

export function dockerGetServiceContainersByAppNameRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  DockerGetServiceContainersByAppNameRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DockerGetServiceContainersByAppNameRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DockerGetServiceContainersByAppNameRequest' from JSON`,
  );
}
