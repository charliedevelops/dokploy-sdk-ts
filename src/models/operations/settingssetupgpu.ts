/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type SettingsSetupGPURequest = {
  serverId?: string | undefined;
};

/** @internal */
export const SettingsSetupGPURequest$inboundSchema: z.ZodType<
  SettingsSetupGPURequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  serverId: z.string().optional(),
});

/** @internal */
export type SettingsSetupGPURequest$Outbound = {
  serverId?: string | undefined;
};

/** @internal */
export const SettingsSetupGPURequest$outboundSchema: z.ZodType<
  SettingsSetupGPURequest$Outbound,
  z.ZodTypeDef,
  SettingsSetupGPURequest
> = z.object({
  serverId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SettingsSetupGPURequest$ {
  /** @deprecated use `SettingsSetupGPURequest$inboundSchema` instead. */
  export const inboundSchema = SettingsSetupGPURequest$inboundSchema;
  /** @deprecated use `SettingsSetupGPURequest$outboundSchema` instead. */
  export const outboundSchema = SettingsSetupGPURequest$outboundSchema;
  /** @deprecated use `SettingsSetupGPURequest$Outbound` instead. */
  export type Outbound = SettingsSetupGPURequest$Outbound;
}

export function settingsSetupGPURequestToJSON(
  settingsSetupGPURequest: SettingsSetupGPURequest,
): string {
  return JSON.stringify(
    SettingsSetupGPURequest$outboundSchema.parse(settingsSetupGPURequest),
  );
}

export function settingsSetupGPURequestFromJSON(
  jsonString: string,
): SafeParseResult<SettingsSetupGPURequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SettingsSetupGPURequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SettingsSetupGPURequest' from JSON`,
  );
}
