/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ApplicationCleanQueuesRequest = {
  applicationId: string;
};

/** @internal */
export const ApplicationCleanQueuesRequest$inboundSchema: z.ZodType<
  ApplicationCleanQueuesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  applicationId: z.string(),
});

/** @internal */
export type ApplicationCleanQueuesRequest$Outbound = {
  applicationId: string;
};

/** @internal */
export const ApplicationCleanQueuesRequest$outboundSchema: z.ZodType<
  ApplicationCleanQueuesRequest$Outbound,
  z.ZodTypeDef,
  ApplicationCleanQueuesRequest
> = z.object({
  applicationId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ApplicationCleanQueuesRequest$ {
  /** @deprecated use `ApplicationCleanQueuesRequest$inboundSchema` instead. */
  export const inboundSchema = ApplicationCleanQueuesRequest$inboundSchema;
  /** @deprecated use `ApplicationCleanQueuesRequest$outboundSchema` instead. */
  export const outboundSchema = ApplicationCleanQueuesRequest$outboundSchema;
  /** @deprecated use `ApplicationCleanQueuesRequest$Outbound` instead. */
  export type Outbound = ApplicationCleanQueuesRequest$Outbound;
}

export function applicationCleanQueuesRequestToJSON(
  applicationCleanQueuesRequest: ApplicationCleanQueuesRequest,
): string {
  return JSON.stringify(
    ApplicationCleanQueuesRequest$outboundSchema.parse(
      applicationCleanQueuesRequest,
    ),
  );
}

export function applicationCleanQueuesRequestFromJSON(
  jsonString: string,
): SafeParseResult<ApplicationCleanQueuesRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ApplicationCleanQueuesRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ApplicationCleanQueuesRequest' from JSON`,
  );
}
