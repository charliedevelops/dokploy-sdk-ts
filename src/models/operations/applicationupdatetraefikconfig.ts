/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ApplicationUpdateTraefikConfigSecurity = {
  authorization: string;
};

export type ApplicationUpdateTraefikConfigRequest = {
  applicationId: string;
  traefikConfig: string;
};

/** @internal */
export const ApplicationUpdateTraefikConfigSecurity$inboundSchema: z.ZodType<
  ApplicationUpdateTraefikConfigSecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  Authorization: z.string(),
}).transform((v) => {
  return remap$(v, {
    "Authorization": "authorization",
  });
});

/** @internal */
export type ApplicationUpdateTraefikConfigSecurity$Outbound = {
  Authorization: string;
};

/** @internal */
export const ApplicationUpdateTraefikConfigSecurity$outboundSchema: z.ZodType<
  ApplicationUpdateTraefikConfigSecurity$Outbound,
  z.ZodTypeDef,
  ApplicationUpdateTraefikConfigSecurity
> = z.object({
  authorization: z.string(),
}).transform((v) => {
  return remap$(v, {
    authorization: "Authorization",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ApplicationUpdateTraefikConfigSecurity$ {
  /** @deprecated use `ApplicationUpdateTraefikConfigSecurity$inboundSchema` instead. */
  export const inboundSchema =
    ApplicationUpdateTraefikConfigSecurity$inboundSchema;
  /** @deprecated use `ApplicationUpdateTraefikConfigSecurity$outboundSchema` instead. */
  export const outboundSchema =
    ApplicationUpdateTraefikConfigSecurity$outboundSchema;
  /** @deprecated use `ApplicationUpdateTraefikConfigSecurity$Outbound` instead. */
  export type Outbound = ApplicationUpdateTraefikConfigSecurity$Outbound;
}

export function applicationUpdateTraefikConfigSecurityToJSON(
  applicationUpdateTraefikConfigSecurity:
    ApplicationUpdateTraefikConfigSecurity,
): string {
  return JSON.stringify(
    ApplicationUpdateTraefikConfigSecurity$outboundSchema.parse(
      applicationUpdateTraefikConfigSecurity,
    ),
  );
}

export function applicationUpdateTraefikConfigSecurityFromJSON(
  jsonString: string,
): SafeParseResult<ApplicationUpdateTraefikConfigSecurity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ApplicationUpdateTraefikConfigSecurity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ApplicationUpdateTraefikConfigSecurity' from JSON`,
  );
}

/** @internal */
export const ApplicationUpdateTraefikConfigRequest$inboundSchema: z.ZodType<
  ApplicationUpdateTraefikConfigRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  applicationId: z.string(),
  traefikConfig: z.string(),
});

/** @internal */
export type ApplicationUpdateTraefikConfigRequest$Outbound = {
  applicationId: string;
  traefikConfig: string;
};

/** @internal */
export const ApplicationUpdateTraefikConfigRequest$outboundSchema: z.ZodType<
  ApplicationUpdateTraefikConfigRequest$Outbound,
  z.ZodTypeDef,
  ApplicationUpdateTraefikConfigRequest
> = z.object({
  applicationId: z.string(),
  traefikConfig: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ApplicationUpdateTraefikConfigRequest$ {
  /** @deprecated use `ApplicationUpdateTraefikConfigRequest$inboundSchema` instead. */
  export const inboundSchema =
    ApplicationUpdateTraefikConfigRequest$inboundSchema;
  /** @deprecated use `ApplicationUpdateTraefikConfigRequest$outboundSchema` instead. */
  export const outboundSchema =
    ApplicationUpdateTraefikConfigRequest$outboundSchema;
  /** @deprecated use `ApplicationUpdateTraefikConfigRequest$Outbound` instead. */
  export type Outbound = ApplicationUpdateTraefikConfigRequest$Outbound;
}

export function applicationUpdateTraefikConfigRequestToJSON(
  applicationUpdateTraefikConfigRequest: ApplicationUpdateTraefikConfigRequest,
): string {
  return JSON.stringify(
    ApplicationUpdateTraefikConfigRequest$outboundSchema.parse(
      applicationUpdateTraefikConfigRequest,
    ),
  );
}

export function applicationUpdateTraefikConfigRequestFromJSON(
  jsonString: string,
): SafeParseResult<ApplicationUpdateTraefikConfigRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ApplicationUpdateTraefikConfigRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ApplicationUpdateTraefikConfigRequest' from JSON`,
  );
}
