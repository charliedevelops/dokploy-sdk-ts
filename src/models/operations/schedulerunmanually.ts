/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ScheduleRunManuallySecurity = {
  authorization: string;
};

export type ScheduleRunManuallyRequest = {
  scheduleId: string;
};

/** @internal */
export const ScheduleRunManuallySecurity$inboundSchema: z.ZodType<
  ScheduleRunManuallySecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  Authorization: z.string(),
}).transform((v) => {
  return remap$(v, {
    "Authorization": "authorization",
  });
});

/** @internal */
export type ScheduleRunManuallySecurity$Outbound = {
  Authorization: string;
};

/** @internal */
export const ScheduleRunManuallySecurity$outboundSchema: z.ZodType<
  ScheduleRunManuallySecurity$Outbound,
  z.ZodTypeDef,
  ScheduleRunManuallySecurity
> = z.object({
  authorization: z.string(),
}).transform((v) => {
  return remap$(v, {
    authorization: "Authorization",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ScheduleRunManuallySecurity$ {
  /** @deprecated use `ScheduleRunManuallySecurity$inboundSchema` instead. */
  export const inboundSchema = ScheduleRunManuallySecurity$inboundSchema;
  /** @deprecated use `ScheduleRunManuallySecurity$outboundSchema` instead. */
  export const outboundSchema = ScheduleRunManuallySecurity$outboundSchema;
  /** @deprecated use `ScheduleRunManuallySecurity$Outbound` instead. */
  export type Outbound = ScheduleRunManuallySecurity$Outbound;
}

export function scheduleRunManuallySecurityToJSON(
  scheduleRunManuallySecurity: ScheduleRunManuallySecurity,
): string {
  return JSON.stringify(
    ScheduleRunManuallySecurity$outboundSchema.parse(
      scheduleRunManuallySecurity,
    ),
  );
}

export function scheduleRunManuallySecurityFromJSON(
  jsonString: string,
): SafeParseResult<ScheduleRunManuallySecurity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ScheduleRunManuallySecurity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ScheduleRunManuallySecurity' from JSON`,
  );
}

/** @internal */
export const ScheduleRunManuallyRequest$inboundSchema: z.ZodType<
  ScheduleRunManuallyRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  scheduleId: z.string(),
});

/** @internal */
export type ScheduleRunManuallyRequest$Outbound = {
  scheduleId: string;
};

/** @internal */
export const ScheduleRunManuallyRequest$outboundSchema: z.ZodType<
  ScheduleRunManuallyRequest$Outbound,
  z.ZodTypeDef,
  ScheduleRunManuallyRequest
> = z.object({
  scheduleId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ScheduleRunManuallyRequest$ {
  /** @deprecated use `ScheduleRunManuallyRequest$inboundSchema` instead. */
  export const inboundSchema = ScheduleRunManuallyRequest$inboundSchema;
  /** @deprecated use `ScheduleRunManuallyRequest$outboundSchema` instead. */
  export const outboundSchema = ScheduleRunManuallyRequest$outboundSchema;
  /** @deprecated use `ScheduleRunManuallyRequest$Outbound` instead. */
  export type Outbound = ScheduleRunManuallyRequest$Outbound;
}

export function scheduleRunManuallyRequestToJSON(
  scheduleRunManuallyRequest: ScheduleRunManuallyRequest,
): string {
  return JSON.stringify(
    ScheduleRunManuallyRequest$outboundSchema.parse(scheduleRunManuallyRequest),
  );
}

export function scheduleRunManuallyRequestFromJSON(
  jsonString: string,
): SafeParseResult<ScheduleRunManuallyRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ScheduleRunManuallyRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ScheduleRunManuallyRequest' from JSON`,
  );
}
