/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ServerGetServerMetricsRequest = {
  url: string;
  token: string;
  dataPoints: string;
};

/** @internal */
export const ServerGetServerMetricsRequest$inboundSchema: z.ZodType<
  ServerGetServerMetricsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  url: z.string(),
  token: z.string(),
  dataPoints: z.string(),
});

/** @internal */
export type ServerGetServerMetricsRequest$Outbound = {
  url: string;
  token: string;
  dataPoints: string;
};

/** @internal */
export const ServerGetServerMetricsRequest$outboundSchema: z.ZodType<
  ServerGetServerMetricsRequest$Outbound,
  z.ZodTypeDef,
  ServerGetServerMetricsRequest
> = z.object({
  url: z.string(),
  token: z.string(),
  dataPoints: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ServerGetServerMetricsRequest$ {
  /** @deprecated use `ServerGetServerMetricsRequest$inboundSchema` instead. */
  export const inboundSchema = ServerGetServerMetricsRequest$inboundSchema;
  /** @deprecated use `ServerGetServerMetricsRequest$outboundSchema` instead. */
  export const outboundSchema = ServerGetServerMetricsRequest$outboundSchema;
  /** @deprecated use `ServerGetServerMetricsRequest$Outbound` instead. */
  export type Outbound = ServerGetServerMetricsRequest$Outbound;
}

export function serverGetServerMetricsRequestToJSON(
  serverGetServerMetricsRequest: ServerGetServerMetricsRequest,
): string {
  return JSON.stringify(
    ServerGetServerMetricsRequest$outboundSchema.parse(
      serverGetServerMetricsRequest,
    ),
  );
}

export function serverGetServerMetricsRequestFromJSON(
  jsonString: string,
): SafeParseResult<ServerGetServerMetricsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ServerGetServerMetricsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ServerGetServerMetricsRequest' from JSON`,
  );
}
