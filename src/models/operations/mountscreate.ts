/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const MountsCreateServiceType = {
  Application: "application",
  Postgres: "postgres",
  Mysql: "mysql",
  Mariadb: "mariadb",
  Mongo: "mongo",
  Redis: "redis",
  Compose: "compose",
} as const;
export type MountsCreateServiceType = ClosedEnum<
  typeof MountsCreateServiceType
>;

export const MountsCreateType = {
  Bind: "bind",
  Volume: "volume",
  File: "file",
} as const;
export type MountsCreateType = ClosedEnum<typeof MountsCreateType>;

export type MountsCreateRequest = {
  content?: string | null | undefined;
  filePath?: string | null | undefined;
  hostPath?: string | null | undefined;
  mountPath: string;
  serviceId: string;
  serviceType?: MountsCreateServiceType | undefined;
  type: MountsCreateType;
  volumeName?: string | null | undefined;
};

/** @internal */
export const MountsCreateServiceType$inboundSchema: z.ZodNativeEnum<
  typeof MountsCreateServiceType
> = z.nativeEnum(MountsCreateServiceType);

/** @internal */
export const MountsCreateServiceType$outboundSchema: z.ZodNativeEnum<
  typeof MountsCreateServiceType
> = MountsCreateServiceType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MountsCreateServiceType$ {
  /** @deprecated use `MountsCreateServiceType$inboundSchema` instead. */
  export const inboundSchema = MountsCreateServiceType$inboundSchema;
  /** @deprecated use `MountsCreateServiceType$outboundSchema` instead. */
  export const outboundSchema = MountsCreateServiceType$outboundSchema;
}

/** @internal */
export const MountsCreateType$inboundSchema: z.ZodNativeEnum<
  typeof MountsCreateType
> = z.nativeEnum(MountsCreateType);

/** @internal */
export const MountsCreateType$outboundSchema: z.ZodNativeEnum<
  typeof MountsCreateType
> = MountsCreateType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MountsCreateType$ {
  /** @deprecated use `MountsCreateType$inboundSchema` instead. */
  export const inboundSchema = MountsCreateType$inboundSchema;
  /** @deprecated use `MountsCreateType$outboundSchema` instead. */
  export const outboundSchema = MountsCreateType$outboundSchema;
}

/** @internal */
export const MountsCreateRequest$inboundSchema: z.ZodType<
  MountsCreateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  content: z.nullable(z.string()).optional(),
  filePath: z.nullable(z.string()).optional(),
  hostPath: z.nullable(z.string()).optional(),
  mountPath: z.string(),
  serviceId: z.string(),
  serviceType: MountsCreateServiceType$inboundSchema.default("application"),
  type: MountsCreateType$inboundSchema,
  volumeName: z.nullable(z.string()).optional(),
});

/** @internal */
export type MountsCreateRequest$Outbound = {
  content?: string | null | undefined;
  filePath?: string | null | undefined;
  hostPath?: string | null | undefined;
  mountPath: string;
  serviceId: string;
  serviceType: string;
  type: string;
  volumeName?: string | null | undefined;
};

/** @internal */
export const MountsCreateRequest$outboundSchema: z.ZodType<
  MountsCreateRequest$Outbound,
  z.ZodTypeDef,
  MountsCreateRequest
> = z.object({
  content: z.nullable(z.string()).optional(),
  filePath: z.nullable(z.string()).optional(),
  hostPath: z.nullable(z.string()).optional(),
  mountPath: z.string(),
  serviceId: z.string(),
  serviceType: MountsCreateServiceType$outboundSchema.default("application"),
  type: MountsCreateType$outboundSchema,
  volumeName: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MountsCreateRequest$ {
  /** @deprecated use `MountsCreateRequest$inboundSchema` instead. */
  export const inboundSchema = MountsCreateRequest$inboundSchema;
  /** @deprecated use `MountsCreateRequest$outboundSchema` instead. */
  export const outboundSchema = MountsCreateRequest$outboundSchema;
  /** @deprecated use `MountsCreateRequest$Outbound` instead. */
  export type Outbound = MountsCreateRequest$Outbound;
}

export function mountsCreateRequestToJSON(
  mountsCreateRequest: MountsCreateRequest,
): string {
  return JSON.stringify(
    MountsCreateRequest$outboundSchema.parse(mountsCreateRequest),
  );
}

export function mountsCreateRequestFromJSON(
  jsonString: string,
): SafeParseResult<MountsCreateRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => MountsCreateRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'MountsCreateRequest' from JSON`,
  );
}
