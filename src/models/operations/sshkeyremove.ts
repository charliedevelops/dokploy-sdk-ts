/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type SshKeyRemoveRequest = {
  sshKeyId: string;
};

/** @internal */
export const SshKeyRemoveRequest$inboundSchema: z.ZodType<
  SshKeyRemoveRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  sshKeyId: z.string(),
});

/** @internal */
export type SshKeyRemoveRequest$Outbound = {
  sshKeyId: string;
};

/** @internal */
export const SshKeyRemoveRequest$outboundSchema: z.ZodType<
  SshKeyRemoveRequest$Outbound,
  z.ZodTypeDef,
  SshKeyRemoveRequest
> = z.object({
  sshKeyId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SshKeyRemoveRequest$ {
  /** @deprecated use `SshKeyRemoveRequest$inboundSchema` instead. */
  export const inboundSchema = SshKeyRemoveRequest$inboundSchema;
  /** @deprecated use `SshKeyRemoveRequest$outboundSchema` instead. */
  export const outboundSchema = SshKeyRemoveRequest$outboundSchema;
  /** @deprecated use `SshKeyRemoveRequest$Outbound` instead. */
  export type Outbound = SshKeyRemoveRequest$Outbound;
}

export function sshKeyRemoveRequestToJSON(
  sshKeyRemoveRequest: SshKeyRemoveRequest,
): string {
  return JSON.stringify(
    SshKeyRemoveRequest$outboundSchema.parse(sshKeyRemoveRequest),
  );
}

export function sshKeyRemoveRequestFromJSON(
  jsonString: string,
): SafeParseResult<SshKeyRemoveRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SshKeyRemoveRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SshKeyRemoveRequest' from JSON`,
  );
}
