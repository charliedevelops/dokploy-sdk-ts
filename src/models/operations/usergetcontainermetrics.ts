/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UserGetContainerMetricsRequest = {
  url: string;
  token: string;
  appName: string;
  dataPoints: string;
};

/** @internal */
export const UserGetContainerMetricsRequest$inboundSchema: z.ZodType<
  UserGetContainerMetricsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  url: z.string(),
  token: z.string(),
  appName: z.string(),
  dataPoints: z.string(),
});

/** @internal */
export type UserGetContainerMetricsRequest$Outbound = {
  url: string;
  token: string;
  appName: string;
  dataPoints: string;
};

/** @internal */
export const UserGetContainerMetricsRequest$outboundSchema: z.ZodType<
  UserGetContainerMetricsRequest$Outbound,
  z.ZodTypeDef,
  UserGetContainerMetricsRequest
> = z.object({
  url: z.string(),
  token: z.string(),
  appName: z.string(),
  dataPoints: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UserGetContainerMetricsRequest$ {
  /** @deprecated use `UserGetContainerMetricsRequest$inboundSchema` instead. */
  export const inboundSchema = UserGetContainerMetricsRequest$inboundSchema;
  /** @deprecated use `UserGetContainerMetricsRequest$outboundSchema` instead. */
  export const outboundSchema = UserGetContainerMetricsRequest$outboundSchema;
  /** @deprecated use `UserGetContainerMetricsRequest$Outbound` instead. */
  export type Outbound = UserGetContainerMetricsRequest$Outbound;
}

export function userGetContainerMetricsRequestToJSON(
  userGetContainerMetricsRequest: UserGetContainerMetricsRequest,
): string {
  return JSON.stringify(
    UserGetContainerMetricsRequest$outboundSchema.parse(
      userGetContainerMetricsRequest,
    ),
  );
}

export function userGetContainerMetricsRequestFromJSON(
  jsonString: string,
): SafeParseResult<UserGetContainerMetricsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UserGetContainerMetricsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UserGetContainerMetricsRequest' from JSON`,
  );
}
