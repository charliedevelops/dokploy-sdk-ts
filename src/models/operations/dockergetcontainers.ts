/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DockerGetContainersSecurity = {
  authorization: string;
};

export type DockerGetContainersRequest = {
  serverId?: string | undefined;
};

/** @internal */
export const DockerGetContainersSecurity$inboundSchema: z.ZodType<
  DockerGetContainersSecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  Authorization: z.string(),
}).transform((v) => {
  return remap$(v, {
    "Authorization": "authorization",
  });
});

/** @internal */
export type DockerGetContainersSecurity$Outbound = {
  Authorization: string;
};

/** @internal */
export const DockerGetContainersSecurity$outboundSchema: z.ZodType<
  DockerGetContainersSecurity$Outbound,
  z.ZodTypeDef,
  DockerGetContainersSecurity
> = z.object({
  authorization: z.string(),
}).transform((v) => {
  return remap$(v, {
    authorization: "Authorization",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DockerGetContainersSecurity$ {
  /** @deprecated use `DockerGetContainersSecurity$inboundSchema` instead. */
  export const inboundSchema = DockerGetContainersSecurity$inboundSchema;
  /** @deprecated use `DockerGetContainersSecurity$outboundSchema` instead. */
  export const outboundSchema = DockerGetContainersSecurity$outboundSchema;
  /** @deprecated use `DockerGetContainersSecurity$Outbound` instead. */
  export type Outbound = DockerGetContainersSecurity$Outbound;
}

export function dockerGetContainersSecurityToJSON(
  dockerGetContainersSecurity: DockerGetContainersSecurity,
): string {
  return JSON.stringify(
    DockerGetContainersSecurity$outboundSchema.parse(
      dockerGetContainersSecurity,
    ),
  );
}

export function dockerGetContainersSecurityFromJSON(
  jsonString: string,
): SafeParseResult<DockerGetContainersSecurity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DockerGetContainersSecurity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DockerGetContainersSecurity' from JSON`,
  );
}

/** @internal */
export const DockerGetContainersRequest$inboundSchema: z.ZodType<
  DockerGetContainersRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  serverId: z.string().optional(),
});

/** @internal */
export type DockerGetContainersRequest$Outbound = {
  serverId?: string | undefined;
};

/** @internal */
export const DockerGetContainersRequest$outboundSchema: z.ZodType<
  DockerGetContainersRequest$Outbound,
  z.ZodTypeDef,
  DockerGetContainersRequest
> = z.object({
  serverId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DockerGetContainersRequest$ {
  /** @deprecated use `DockerGetContainersRequest$inboundSchema` instead. */
  export const inboundSchema = DockerGetContainersRequest$inboundSchema;
  /** @deprecated use `DockerGetContainersRequest$outboundSchema` instead. */
  export const outboundSchema = DockerGetContainersRequest$outboundSchema;
  /** @deprecated use `DockerGetContainersRequest$Outbound` instead. */
  export type Outbound = DockerGetContainersRequest$Outbound;
}

export function dockerGetContainersRequestToJSON(
  dockerGetContainersRequest: DockerGetContainersRequest,
): string {
  return JSON.stringify(
    DockerGetContainersRequest$outboundSchema.parse(dockerGetContainersRequest),
  );
}

export function dockerGetContainersRequestFromJSON(
  jsonString: string,
): SafeParseResult<DockerGetContainersRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DockerGetContainersRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DockerGetContainersRequest' from JSON`,
  );
}
