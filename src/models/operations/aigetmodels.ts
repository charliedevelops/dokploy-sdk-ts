/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AiGetModelsRequest = {
  apiUrl: string;
  apiKey: string;
};

/** @internal */
export const AiGetModelsRequest$inboundSchema: z.ZodType<
  AiGetModelsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  apiUrl: z.string(),
  apiKey: z.string(),
});

/** @internal */
export type AiGetModelsRequest$Outbound = {
  apiUrl: string;
  apiKey: string;
};

/** @internal */
export const AiGetModelsRequest$outboundSchema: z.ZodType<
  AiGetModelsRequest$Outbound,
  z.ZodTypeDef,
  AiGetModelsRequest
> = z.object({
  apiUrl: z.string(),
  apiKey: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AiGetModelsRequest$ {
  /** @deprecated use `AiGetModelsRequest$inboundSchema` instead. */
  export const inboundSchema = AiGetModelsRequest$inboundSchema;
  /** @deprecated use `AiGetModelsRequest$outboundSchema` instead. */
  export const outboundSchema = AiGetModelsRequest$outboundSchema;
  /** @deprecated use `AiGetModelsRequest$Outbound` instead. */
  export type Outbound = AiGetModelsRequest$Outbound;
}

export function aiGetModelsRequestToJSON(
  aiGetModelsRequest: AiGetModelsRequest,
): string {
  return JSON.stringify(
    AiGetModelsRequest$outboundSchema.parse(aiGetModelsRequest),
  );
}

export function aiGetModelsRequestFromJSON(
  jsonString: string,
): SafeParseResult<AiGetModelsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AiGetModelsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AiGetModelsRequest' from JSON`,
  );
}
